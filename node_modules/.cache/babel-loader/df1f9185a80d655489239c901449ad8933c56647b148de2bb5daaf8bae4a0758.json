{"ast":null,"code":"\n\n// import React, {useContext, useEffect, useState} from 'react';\n// import {AuthContext} from \"../../context/AuthContext\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n// import {useForm} from \"react-hook-form\";\n// import hilado from \"../../assets/hilado-en-huso.jpg\";\n// import Main from \"../../components/main/Main\";\n// import Footer from \"../../components/footer/Footer\";\n// import Button from \"../../components/button/Button\";\n// import './Account.css';\n//\n//\n//\n//\n// function Account() {\n//\n//\n//     const { user} = useContext(AuthContext);\n//     const navigate = useNavigate();\n//     const [item, setItem] = useState(\"\");\n//     const [items, setItems] = useState([]);\n//\n//     const [dateInfo, setDateInfo] = useState(\"\");\n//     const [ id, setId] = useState(false);\n//     const [previewUrl, setPreviewUrl] = useState(\"\");\n//     const [file, setFile] = useState([]);\n//\n//     const token = localStorage.getItem('token');\n//     const [addSuccessPhoto,toggleAddSuccessPhoto] = useState(false);\n//\n//     const {register: register2, formState: {errors: errors2}, handleSubmit: handleSubmit2} = useForm();\n//     const [ textarea, setTextarea ] = useState('');\n//     const [loading, toggleLoading] = useState(false);\n//     // const [error, toggleError] = useState(false);\n//     // const [errorMessage, setErrorMessage] = useState('');\n//     // const [updateTrigger, setUpdateTrigger] = useState(false);\n//     const nameInfo = \"http://localhost:8083/orders\"\n//\n//\n//\n//     const resetFormFields = () => {\n//         setPreviewUrl(\"\"); // Clear the image preview\n//         setItem(\"\"); // Clear the item value\n//         setTextarea(\"\"); // Clear the textarea value\n//         setDateInfo(\"\");// Add other form fields you want to reset here\n//     };\n//\n//\n//\n//\n//     /////////////////////////////////////////////////////// // photo\n//     function handleImageChance(e) {\n//         const uploadedFile = e.target.files[0];\n//         console.log (uploadedFile);\n//         setFile(uploadedFile);\n//         setPreviewUrl(URL.createObjectURL(uploadedFile));\n//     }\n//\n//\n//\n//     async function sendImage(e) {\n//         e.preventDefault();\n//\n//         console.log(textarea)\n//         const formData = new FormData();\n//         formData.append(\"file\", file);\n//\n//         toggleLoading(true);\n//         try {\n//             const response = await axios.post(`http://localhost:8083/items/photo`, formData,\n//                 {\n//                     headers: {\n//                         \"Content-Type\": \"multipart/form-data\",\n//                         \"Authorization\": `Bearer ${token}`,\n//                     },\n//                 })\n//             setId(response.data);\n//             if (response.status === 204) {\n//                 toggleAddSuccessPhoto(true);\n//                 resetFormFields();\n//             }\n//             console.log(response)\n//             console.log(formData)\n//             navigate(\"/Account\");\n//         } catch (e) {\n//             console.error(e)\n//             // toggleError(true);\n//             // setErrorMessage('Er is een fout opgetreden bij het uploaden, roep de administrator');\n//             toggleLoading(false);\n//         }\n//\n//         return formData\n//     }\n//\n// //////////////////////////////////////////////////// Reserveren\n//     const Order = async (e) => {\n//         e.preventDefault();\n//         console.log(item, dateInfo, user.username )\n//         toggleLoading(true);\n//\n//         try {\n//\n//             const response = await axios.post(`${nameInfo}`, {\n//                 itemInfo: item,\n//               user: user.username,\n//\n//             },\n//                 {\n//                     headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     \"Authorization\": `Bearer ${token}`,\n//                 },\n//             });\n//             console.log(response)\n//             resetFormFields();\n//             navigate(\"/Account\");\n//\n//         } catch (e) {\n//             console.log(e)\n//             // toggleError(true);\n//             // setErrorMessage('Er is een fout opgetreden bij het reserveren van het item.');\n//\n//         }\n//         toggleLoading(false);\n//         // setUpdateTrigger((prev) => !prev);\n//     }\n//\n//\n//\n//\n//\n//\n// /////////////////////////////////////////////////////////////////////////////////////////////////////////\n//     useEffect(() => {\n//         async function fetchItems() {\n//             const token = localStorage.getItem('token')\n//             toggleLoading(true);\n//\n//             try {\n//\n//                 const response = await axios.get(`http://localhost:8083/items`,\n//                     {\n//                         name_Info: nameInfo,\n//                         date_Info: dateInfo,\n//\n//                         headers: {\n//                             \"Content-Type\": \"application/json\",\n//                             \"Authorization\": `Bearer ${token}`,\n//                         },\n//                     })\n//                 setItems(response.data);\n//\n//                 console.log(response.data);\n//                 navigate(\"/account\")\n//             } catch (e) {\n//\n//                 console.error(e);\n//                 // toggleError(true);\n//                 // setErrorMessage('Er is een fout opgetreden bij het ophalen van items.');\n//             }\n//             toggleLoading(false);\n//         }\n//         void  fetchItems()\n//\n//     }, [])\n//\n// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//\n//     return (\n//\n//         <>\n//             {/*{loading && <p>Loading...</p>}*/}\n//             {/*/!*{error && <p>{errorMessage}</p>}*!/*/}\n//\n//         <Main className=\"outer-container-account\">\n//             <div className=\"inner-container-account\">\n//\n//             <div className=\"hilado-1\">\n//\n//\n//                 <img src={hilado}/>\n//\n//\n//             <form className=\"form-xtra\">\n//\n//                 <label htmlFor=\"name\">\n//\n//\n//                     {/*<strong>{user.username}{email}</strong>*/}\n//                     <div className=\"img-row\">\n//\n//\n//                         <fieldset>\n//                             <legend>Item afbelding uploaden:</legend>\n//\n//                             <form onSubmit={sendImage}>\n//                                 <label htmlFor=\"item-image\">\n//                                     kies afbeelding\n//                                     <input onChange={handleImageChance} id=\"item_id\" type=\"file\"\n//\n//                                            name=\"upload\" accept=\"image.*\"/>\n//                                 </label>\n//\n//                                 {previewUrl &&\n//                                     <label> Preview:\n//\n//                                         <img src={previewUrl} alt=\"Voorbeeld van de afbeelding \"\n//                                              className=\"image-preview\"/>\n//                                     </label>\n//                                 }\n//\n//                                 <label htmlFor=\"Items-field\">Item\n//                                     <select\n//                                         name=\"items\"\n//                                         id=\"item_id\"\n//                                         type=\"list\"\n//                                         value={item}\n//                                         onChange={(e) => setItem(e.target.value)}\n//                                     >\n//                                         <option value=\"kies \">click hier aan wat van toepassing is</option>\n//                                         <option\n//                                             value=  {item.map}\n//\n//                                         ></option>\n//                                         <option value=\"sustainable\"> sustainable</option>\n//                                         <option value=\"biological\"> biological</option>\n//                                         <option value=\"organic\"> organic</option>\n//                                         <option value=\"pesticide-free\"> pesticide-free</option>\n//                                         <option value=\"additive-free\"> additive-free</option>\n//                                         <option value=\"non-chemical\"> non-chemical</option>\n//                                         <option value=\"minimalistic\"> minimalistic</option>\n//                                         <option value=\"linen\"> linen</option>\n//                                         <option value=\"silk\"> silk</option>\n//                                         <option value=\"cotton\"> cotton</option>\n//                                         <option value=\"wool\"> wool</option>\n//                                         <option value=\"organisch\"> organisch</option>\n//                                         <option value=\"wol\"> wol</option>\n//                                         <option value=\"linnen\"> linnen</option>\n//\n//                                     </select>\n//                                 </label>\n//\n//                                 <label htmlFor=\"FileName\">\n//                                                 <textarea\n//                                                     id=\"FileName\"\n//                                                     rows=\"5\"\n//                                                     cols=\"29\"\n//                                                     placeholder=\"vertel ons meer over de item\"\n//                                                     value={textarea}\n//                                                     onChange={(e) => setTextarea(e.target.value)}\n//                                                     validationRules={{\n//                                                         required: {\n//                                                             value: true,\n//                                                             message: 'Dit veld is verplicht',\n//                                                         }\n//                                                     }}\n//                                                     register={register2}\n//                                                     errors={errors2}\n//                                                 />\n//                                     {errors2.subject && <p>{errors2.subject.message}</p>}\n//                                     <button type=\"submit\"> Uploaden</button>\n//\n//\n//                                 </label>\n//\n//                             </form>\n//                         </fieldset>\n//\n//\n//                     </div>\n//\n//                 </label>\n//\n//\n//\n//                     <fieldset>\n//                     <legend>Reserveren van Items</legend>\n//\n//                     <label htmlFor=\"Items-field\">Item\n//                         <select\n//                             name=\"items\"\n//                             id=\"item_id\"\n//                             type=\"list\"\n//                             value={item}\n//                             onChange={(e) => setItem(e.target.value)}\n//\n//                         >\n//                             <option value=\"kies \">Wat vind jij leuk? </option>\n//                             {items.map((item) => {\n//                                 return <option\n//                                     value={item.nameInfo}>\n//                                     item id: {item.id} - {item.nameInfo}\n//                                 </option>\n//                             })}\n//                         </select>\n//                     </label>\n//\n//\n//                     <label htmlFor=\"date_Info-field\">Date\n//                         <input\n//                             name=\"date_Info\"\n//                             id=\"date_Info-field\"\n//                             value={dateInfo}\n//                             onChange={(e) => setDateInfo(e.target.value)}\n//                         />\n//                     </label>\n//\n//                     <Button id=\"button-box\" className=\"button\" type=\"button\" onClick={Order}>Verstuur</Button>\n//                     </fieldset>\n//             </form>\n//             </div>\n//             </div>\n//\n//             </Main>\n//\n//             <Footer description=\"Copyright © 2023 LaBruja. Alle rechten voorbehouden.\"\n//             />\n//        </>\n//     );\n// }\n//\n// export default Account;\n//","map":{"version":3,"names":[],"sources":["C:/Users/jftal/WebstormProjects/Fronted_Klending_bieb1/src/pages/account/Account.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useContext, useEffect, useState} from 'react';\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n// import {useNavigate} from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import {useForm} from \"react-hook-form\";\r\n// import hilado from \"../../assets/hilado-en-huso.jpg\";\r\n// import Main from \"../../components/main/Main\";\r\n// import Footer from \"../../components/footer/Footer\";\r\n// import Button from \"../../components/button/Button\";\r\n// import './Account.css';\r\n//\r\n//\r\n//\r\n//\r\n// function Account() {\r\n//\r\n//\r\n//     const { user} = useContext(AuthContext);\r\n//     const navigate = useNavigate();\r\n//     const [item, setItem] = useState(\"\");\r\n//     const [items, setItems] = useState([]);\r\n//\r\n//     const [dateInfo, setDateInfo] = useState(\"\");\r\n//     const [ id, setId] = useState(false);\r\n//     const [previewUrl, setPreviewUrl] = useState(\"\");\r\n//     const [file, setFile] = useState([]);\r\n//\r\n//     const token = localStorage.getItem('token');\r\n//     const [addSuccessPhoto,toggleAddSuccessPhoto] = useState(false);\r\n//\r\n//     const {register: register2, formState: {errors: errors2}, handleSubmit: handleSubmit2} = useForm();\r\n//     const [ textarea, setTextarea ] = useState('');\r\n//     const [loading, toggleLoading] = useState(false);\r\n//     // const [error, toggleError] = useState(false);\r\n//     // const [errorMessage, setErrorMessage] = useState('');\r\n//     // const [updateTrigger, setUpdateTrigger] = useState(false);\r\n//     const nameInfo = \"http://localhost:8083/orders\"\r\n//\r\n//\r\n//\r\n//     const resetFormFields = () => {\r\n//         setPreviewUrl(\"\"); // Clear the image preview\r\n//         setItem(\"\"); // Clear the item value\r\n//         setTextarea(\"\"); // Clear the textarea value\r\n//         setDateInfo(\"\");// Add other form fields you want to reset here\r\n//     };\r\n//\r\n//\r\n//\r\n//\r\n//     /////////////////////////////////////////////////////// // photo\r\n//     function handleImageChance(e) {\r\n//         const uploadedFile = e.target.files[0];\r\n//         console.log (uploadedFile);\r\n//         setFile(uploadedFile);\r\n//         setPreviewUrl(URL.createObjectURL(uploadedFile));\r\n//     }\r\n//\r\n//\r\n//\r\n//     async function sendImage(e) {\r\n//         e.preventDefault();\r\n//\r\n//         console.log(textarea)\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", file);\r\n//\r\n//         toggleLoading(true);\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:8083/items/photo`, formData,\r\n//                 {\r\n//                     headers: {\r\n//                         \"Content-Type\": \"multipart/form-data\",\r\n//                         \"Authorization\": `Bearer ${token}`,\r\n//                     },\r\n//                 })\r\n//             setId(response.data);\r\n//             if (response.status === 204) {\r\n//                 toggleAddSuccessPhoto(true);\r\n//                 resetFormFields();\r\n//             }\r\n//             console.log(response)\r\n//             console.log(formData)\r\n//             navigate(\"/Account\");\r\n//         } catch (e) {\r\n//             console.error(e)\r\n//             // toggleError(true);\r\n//             // setErrorMessage('Er is een fout opgetreden bij het uploaden, roep de administrator');\r\n//             toggleLoading(false);\r\n//         }\r\n//\r\n//         return formData\r\n//     }\r\n//\r\n// //////////////////////////////////////////////////// Reserveren\r\n//     const Order = async (e) => {\r\n//         e.preventDefault();\r\n//         console.log(item, dateInfo, user.username )\r\n//         toggleLoading(true);\r\n//\r\n//         try {\r\n//\r\n//             const response = await axios.post(`${nameInfo}`, {\r\n//                 itemInfo: item,\r\n//               user: user.username,\r\n//\r\n//             },\r\n//                 {\r\n//                     headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                     \"Authorization\": `Bearer ${token}`,\r\n//                 },\r\n//             });\r\n//             console.log(response)\r\n//             resetFormFields();\r\n//             navigate(\"/Account\");\r\n//\r\n//         } catch (e) {\r\n//             console.log(e)\r\n//             // toggleError(true);\r\n//             // setErrorMessage('Er is een fout opgetreden bij het reserveren van het item.');\r\n//\r\n//         }\r\n//         toggleLoading(false);\r\n//         // setUpdateTrigger((prev) => !prev);\r\n//     }\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//     useEffect(() => {\r\n//         async function fetchItems() {\r\n//             const token = localStorage.getItem('token')\r\n//             toggleLoading(true);\r\n//\r\n//             try {\r\n//\r\n//                 const response = await axios.get(`http://localhost:8083/items`,\r\n//                     {\r\n//                         name_Info: nameInfo,\r\n//                         date_Info: dateInfo,\r\n//\r\n//                         headers: {\r\n//                             \"Content-Type\": \"application/json\",\r\n//                             \"Authorization\": `Bearer ${token}`,\r\n//                         },\r\n//                     })\r\n//                 setItems(response.data);\r\n//\r\n//                 console.log(response.data);\r\n//                 navigate(\"/account\")\r\n//             } catch (e) {\r\n//\r\n//                 console.error(e);\r\n//                 // toggleError(true);\r\n//                 // setErrorMessage('Er is een fout opgetreden bij het ophalen van items.');\r\n//             }\r\n//             toggleLoading(false);\r\n//         }\r\n//         void  fetchItems()\r\n//\r\n//     }, [])\r\n//\r\n// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//\r\n//     return (\r\n//\r\n//         <>\r\n//             {/*{loading && <p>Loading...</p>}*/}\r\n//             {/*/!*{error && <p>{errorMessage}</p>}*!/*/}\r\n//\r\n//         <Main className=\"outer-container-account\">\r\n//             <div className=\"inner-container-account\">\r\n//\r\n//             <div className=\"hilado-1\">\r\n//\r\n//\r\n//                 <img src={hilado}/>\r\n//\r\n//\r\n//             <form className=\"form-xtra\">\r\n//\r\n//                 <label htmlFor=\"name\">\r\n//\r\n//\r\n//                     {/*<strong>{user.username}{email}</strong>*/}\r\n//                     <div className=\"img-row\">\r\n//\r\n//\r\n//                         <fieldset>\r\n//                             <legend>Item afbelding uploaden:</legend>\r\n//\r\n//                             <form onSubmit={sendImage}>\r\n//                                 <label htmlFor=\"item-image\">\r\n//                                     kies afbeelding\r\n//                                     <input onChange={handleImageChance} id=\"item_id\" type=\"file\"\r\n//\r\n//                                            name=\"upload\" accept=\"image.*\"/>\r\n//                                 </label>\r\n//\r\n//                                 {previewUrl &&\r\n//                                     <label> Preview:\r\n//\r\n//                                         <img src={previewUrl} alt=\"Voorbeeld van de afbeelding \"\r\n//                                              className=\"image-preview\"/>\r\n//                                     </label>\r\n//                                 }\r\n//\r\n//                                 <label htmlFor=\"Items-field\">Item\r\n//                                     <select\r\n//                                         name=\"items\"\r\n//                                         id=\"item_id\"\r\n//                                         type=\"list\"\r\n//                                         value={item}\r\n//                                         onChange={(e) => setItem(e.target.value)}\r\n//                                     >\r\n//                                         <option value=\"kies \">click hier aan wat van toepassing is</option>\r\n//                                         <option\r\n//                                             value=  {item.map}\r\n//\r\n//                                         ></option>\r\n//                                         <option value=\"sustainable\"> sustainable</option>\r\n//                                         <option value=\"biological\"> biological</option>\r\n//                                         <option value=\"organic\"> organic</option>\r\n//                                         <option value=\"pesticide-free\"> pesticide-free</option>\r\n//                                         <option value=\"additive-free\"> additive-free</option>\r\n//                                         <option value=\"non-chemical\"> non-chemical</option>\r\n//                                         <option value=\"minimalistic\"> minimalistic</option>\r\n//                                         <option value=\"linen\"> linen</option>\r\n//                                         <option value=\"silk\"> silk</option>\r\n//                                         <option value=\"cotton\"> cotton</option>\r\n//                                         <option value=\"wool\"> wool</option>\r\n//                                         <option value=\"organisch\"> organisch</option>\r\n//                                         <option value=\"wol\"> wol</option>\r\n//                                         <option value=\"linnen\"> linnen</option>\r\n//\r\n//                                     </select>\r\n//                                 </label>\r\n//\r\n//                                 <label htmlFor=\"FileName\">\r\n//                                                 <textarea\r\n//                                                     id=\"FileName\"\r\n//                                                     rows=\"5\"\r\n//                                                     cols=\"29\"\r\n//                                                     placeholder=\"vertel ons meer over de item\"\r\n//                                                     value={textarea}\r\n//                                                     onChange={(e) => setTextarea(e.target.value)}\r\n//                                                     validationRules={{\r\n//                                                         required: {\r\n//                                                             value: true,\r\n//                                                             message: 'Dit veld is verplicht',\r\n//                                                         }\r\n//                                                     }}\r\n//                                                     register={register2}\r\n//                                                     errors={errors2}\r\n//                                                 />\r\n//                                     {errors2.subject && <p>{errors2.subject.message}</p>}\r\n//                                     <button type=\"submit\"> Uploaden</button>\r\n//\r\n//\r\n//                                 </label>\r\n//\r\n//                             </form>\r\n//                         </fieldset>\r\n//\r\n//\r\n//                     </div>\r\n//\r\n//                 </label>\r\n//\r\n//\r\n//\r\n//                     <fieldset>\r\n//                     <legend>Reserveren van Items</legend>\r\n//\r\n//                     <label htmlFor=\"Items-field\">Item\r\n//                         <select\r\n//                             name=\"items\"\r\n//                             id=\"item_id\"\r\n//                             type=\"list\"\r\n//                             value={item}\r\n//                             onChange={(e) => setItem(e.target.value)}\r\n//\r\n//                         >\r\n//                             <option value=\"kies \">Wat vind jij leuk? </option>\r\n//                             {items.map((item) => {\r\n//                                 return <option\r\n//                                     value={item.nameInfo}>\r\n//                                     item id: {item.id} - {item.nameInfo}\r\n//                                 </option>\r\n//                             })}\r\n//                         </select>\r\n//                     </label>\r\n//\r\n//\r\n//                     <label htmlFor=\"date_Info-field\">Date\r\n//                         <input\r\n//                             name=\"date_Info\"\r\n//                             id=\"date_Info-field\"\r\n//                             value={dateInfo}\r\n//                             onChange={(e) => setDateInfo(e.target.value)}\r\n//                         />\r\n//                     </label>\r\n//\r\n//                     <Button id=\"button-box\" className=\"button\" type=\"button\" onClick={Order}>Verstuur</Button>\r\n//                     </fieldset>\r\n//             </form>\r\n//             </div>\r\n//             </div>\r\n//\r\n//             </Main>\r\n//\r\n//             <Footer description=\"Copyright © 2023 LaBruja. Alle rechten voorbehouden.\"\r\n//             />\r\n//        </>\r\n//     );\r\n// }\r\n//\r\n// export default Account;\r\n//\r\n"],"mappings":";;AAg},"metadata":{},"sourceType":"module","externalDependencies":[]}