{"ast":null,"code":"\n// import React, {useContext, useState} from \"react\";\n// import {Link, useNavigate} from \"react-router-dom\";\n//\n// import axios from \"axios\";\n// import {AuthContext} from \"../../context/AuthContext\";\n// import pic from '../../../../KLEDING_BIEB/src/assets/cotton.jpg';\n// import Header from \"../../components/header/Header\";\n// import {useForm} from \"react-hook-form\";\n\n////////////////////////////////////////\n\n//\n//\n// function Subscription() {\n//     const {subscription} = useContext(AuthContext);\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [username, setUsername] = useState('');\n//     const navigate = useNavigate();\n//     const {toggleSuccessRegister} = useState(true);\n//     const token = localStorage.getItem('token');\n//   //  const { formState: { errors }} = useForm();\n//     const [errors, toggleErrors] = useState(false);\n//\n//\n//     async function registerUser(e) {\n//         e.preventDefault()\n//         console.log(email, password, username)\n//         try {\n//             const response = await axios.post('http://localhost:8083/users', {\n//                 email: email,\n//                 password: password,\n//                 username: username,\n//             })\n//             if (response.status !== 201) {\n//                 toggleSuccessRegister(false);\n//             }\n//             console.log(response)\n//            //login(email);\n//          //navigate('/Account');\n//         } catch (e) {\n//             console.error(e)\n//           //  navigate('/Subscription');\n//         }\n//\n//     }\n//\n//\n//         return (\n//\n//\n//             <p className=\"page2\">\n//                 <Header icon={pic}/>\n//\n//\n//                 <ul className=\"form-xtra\">\n//\n//                     <form onSubmit={registerUser}>\n//\n//\n//                         <fieldset>\n//                             <legend> <h1>Registreren</h1></legend>\n//\n//                         <label htmlFor=\"details-email\">\n//                             E-mailadres :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"email\"\n//                                 value={email}\n//                                 onChange={(e) => setEmail(e.target.value)}\n//                                 placeholder=\"email\"\n//                                 validationRules={{\n//                                     required: {\n//                                         value: true,\n//                                         message: 'Dit veld is verplicht',\n//                                     }\n//                                 }}\n//                             />\n//                             {errors.email && (\n//                                 <p className=\"error_mssg\">{errors.email.message}</p>\n//                             )}\n//                         </label>\n//\n//\n//\n//\n//                         <label htmlFor=\"details-wachtwoord\">\n//                             Wachtwoord :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"password\"\n//                                 value={password}\n//                                 onChange={(e) => setPassword(e.target.value)}\n//                                 placeholder=\"password\"\n//                                 validationRules={{\n//                                     required: {\n//                                         value: true,\n//                                         message: 'Dit veld is verplicht',\n//                                     }\n//                                 }}\n//\n//\n//                             />\n//\n//                             {errors.password && (\n//                                 <p className=\"error_mssg\">{errors.password.message}</p>\n//                                 )}\n//                         </label>\n//\n//\n//\n//                         <label htmlFor=\"details-gebruikersnaam\">\n//                             Gebruikersnaam :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"username\"\n//                                 value={username}\n//                                 onChange={(e) => setUsername(e.target.value)}\n//                                 placeholder=\"username\"\n//                                 validationRules={{\n//                                     required: {\n//                                         value: true,\n//                                         message: 'Dit veld is verplicht',\n//                                     }\n//                                 }}\n//                             />\n//\n//                             {errors.username && (\n//                                 <p className=\"error_mssg\">{errors.username.message}</p>\n//                             )}\n//                         </label>\n//\n//\n//                             {errors && <p className=\"error-msg\">Registratie mislukt !!\n//                                 Alle velden invullen</p>}\n//\n//                         <button type=\"submit\">Registreren</button>\n//                         </fieldset>\n//                     </form>\n//\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\n//\n//\n//                 </ul>\n//\n//             </p>\n//\n//\n//         );\n//\n//\n//\n// }\n//\n// export default Subscription;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////","map":{"version":3,"names":[],"sources":["C:/Users/jftal/WebstormProjects/KLEDING_BIEB/src/pages/subscription/Subscription.js"],"sourcesContent":["\r\n// import React, {useContext, useState} from \"react\";\r\n// import {Link, useNavigate} from \"react-router-dom\";\r\n//\r\n// import axios from \"axios\";\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n// import pic from '../../../../KLEDING_BIEB/src/assets/cotton.jpg';\r\n// import Header from \"../../components/header/Header\";\r\n// import {useForm} from \"react-hook-form\";\r\n\r\n////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n// function Subscription() {\r\n//     const {subscription} = useContext(AuthContext);\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [username, setUsername] = useState('');\r\n//     const navigate = useNavigate();\r\n//     const {toggleSuccessRegister} = useState(true);\r\n//     const token = localStorage.getItem('token');\r\n//   //  const { formState: { errors }} = useForm();\r\n//     const [errors, toggleErrors] = useState(false);\r\n//\r\n//\r\n//     async function registerUser(e) {\r\n//         e.preventDefault()\r\n//         console.log(email, password, username)\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8083/users', {\r\n//                 email: email,\r\n//                 password: password,\r\n//                 username: username,\r\n//             })\r\n//             if (response.status !== 201) {\r\n//                 toggleSuccessRegister(false);\r\n//             }\r\n//             console.log(response)\r\n//            //login(email);\r\n//          //navigate('/Account');\r\n//         } catch (e) {\r\n//             console.error(e)\r\n//           //  navigate('/Subscription');\r\n//         }\r\n//\r\n//     }\r\n//\r\n//\r\n//         return (\r\n//\r\n//\r\n//             <p className=\"page2\">\r\n//                 <Header icon={pic}/>\r\n//\r\n//\r\n//                 <ul className=\"form-xtra\">\r\n//\r\n//                     <form onSubmit={registerUser}>\r\n//\r\n//\r\n//                         <fieldset>\r\n//                             <legend> <h1>Registreren</h1></legend>\r\n//\r\n//                         <label htmlFor=\"details-email\">\r\n//                             E-mailadres :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"email\"\r\n//                                 value={email}\r\n//                                 onChange={(e) => setEmail(e.target.value)}\r\n//                                 placeholder=\"email\"\r\n//                                 validationRules={{\r\n//                                     required: {\r\n//                                         value: true,\r\n//                                         message: 'Dit veld is verplicht',\r\n//                                     }\r\n//                                 }}\r\n//                             />\r\n//                             {errors.email && (\r\n//                                 <p className=\"error_mssg\">{errors.email.message}</p>\r\n//                             )}\r\n//                         </label>\r\n//\r\n//\r\n//\r\n//\r\n//                         <label htmlFor=\"details-wachtwoord\">\r\n//                             Wachtwoord :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"password\"\r\n//                                 value={password}\r\n//                                 onChange={(e) => setPassword(e.target.value)}\r\n//                                 placeholder=\"password\"\r\n//                                 validationRules={{\r\n//                                     required: {\r\n//                                         value: true,\r\n//                                         message: 'Dit veld is verplicht',\r\n//                                     }\r\n//                                 }}\r\n//\r\n//\r\n//                             />\r\n//\r\n//                             {errors.password && (\r\n//                                 <p className=\"error_mssg\">{errors.password.message}</p>\r\n//                                 )}\r\n//                         </label>\r\n//\r\n//\r\n//\r\n//                         <label htmlFor=\"details-gebruikersnaam\">\r\n//                             Gebruikersnaam :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"username\"\r\n//                                 value={username}\r\n//                                 onChange={(e) => setUsername(e.target.value)}\r\n//                                 placeholder=\"username\"\r\n//                                 validationRules={{\r\n//                                     required: {\r\n//                                         value: true,\r\n//                                         message: 'Dit veld is verplicht',\r\n//                                     }\r\n//                                 }}\r\n//                             />\r\n//\r\n//                             {errors.username && (\r\n//                                 <p className=\"error_mssg\">{errors.username.message}</p>\r\n//                             )}\r\n//                         </label>\r\n//\r\n//\r\n//                             {errors && <p className=\"error-msg\">Registratie mislukt !!\r\n//                                 Alle velden invullen</p>}\r\n//\r\n//                         <button type=\"submit\">Registreren</button>\r\n//                         </fieldset>\r\n//                     </form>\r\n//\r\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\r\n//\r\n//\r\n//                 </ul>\r\n//\r\n//             </p>\r\n//\r\n//\r\n//         );\r\n//\r\n//\r\n//\r\n// }\r\n//\r\n// export default Subscription;\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}