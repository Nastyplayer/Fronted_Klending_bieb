{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jftal\\\\WebstormProjects\\\\KLEDING_BIEB\\\\src\\\\pages\\\\admin\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport Header from '../../components/header/Header';\nimport './Admin.css';\nimport bib from \"../../assets/Mar_Bib.jpg\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport './Admin.css';\nimport axios from \"axios\";\nimport Input from \"../../components/input/Input\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"../../components/button/Button\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Subscription } from \"../subscription/Subscription\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport pic from \"../../assets/hilado-en-huso.jpg\";\n\n// class Admin extends React.Component {\n//     render() {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const [error, toggleError] = useState(false);\n  const [loading, toggleLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [singleUser, setSingleUser] = useState('');\n  const [toDelete, setToDelete] = useState([]);\n  const [items, setItems] = useState([]);\n  //  const [deleteThisItem, toggleDeleteThisItem] = useState(false);\n  //  const [singleItem, setSingleItem] = useState('');\n  //  const [item_id, setItem_id] = useState(0);\n  //  const [nameInfo, setNameInfo] = useState(\"\");\n\n  const [idToDelete, setIdToDelete] = useState(\"\");\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionsList, setSubscriptionsList] = useState([]);\n\n  // const [userInfo, setUserInfo] = useState(\"\");\n  // const [expirationDate, setExpirationDate] = useState(\"\");\n  // const [subscriptionStatus, setSubscriptionStatus] = useState(\"\");\n  // const [typeSubscription, setTypeSubscription] = useState(\"\");\n  const [patchThisSubscription, togglePatchThisSubscription] = useState(false);\n  const [subscriptionIdToPatch, setSubscriptionIdToPatch] = useState(\"\");\n  const {\n    handleSubmit: handleSubmit3,\n    formState: {\n      errors3\n    }\n  } = useForm();\n  // const { handleSubmit, formState: { errors4 } } = useForm();\n\n  //patch user\n  const {\n    register,\n    handleSubmit: handleSubmit1,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [patchThisUser, togglePatchThisUser] = useState(false);\n  const [userIdToPatch, setUserIdToPatch] = useState(\"\");\n  const {\n    isAuth,\n    user\n  } = useContext(AuthContext);\n  const [admin, toggleAdmin] = useState(false);\n\n  //mail\n  const {\n    register: register2,\n    formState: {\n      errors: errors2\n    },\n    handleSubmit: handleSubmit2,\n    reset\n  } = useForm();\n  const [userIdToEmail, setUserIdToEmail] = useState(\"\");\n  const [succesSendMail, toggleSuccesSendMail] = useState(false);\n  const {\n    register: register4,\n    handleSubmit: handleSubmit4,\n    reset: resetForm4,\n    formState: {\n      errors: errors4\n    }\n  } = useForm();\n  const {\n    register: register5,\n    handleSubmit: handleSubmit5,\n    reset: resetForm5,\n    formState: {\n      errors: errors5\n    }\n  } = useForm();\n  const {\n    register: register6,\n    handleSubmit: handleSubmit6,\n    reset: resetForm6,\n    formState: {\n      errors: errors6\n    }\n  } = useForm();\n  const {\n    register: register7,\n    handleSubmit: handleSubmit7,\n    reset: resetForm7,\n    formState: {\n      errors: errors7\n    }\n  } = useForm();\n  const {\n    register: register8,\n    handleSubmit: handleSubmit8,\n    reset: resetForm8,\n    formState: {\n      errors: errors8\n    }\n  } = useForm();\n  const resetFormFields = () => {\n    setSingleUser(\"\"); // Clear the selected user value\n    setToDelete([]); // Clear the selected item value\n    setSubscriptionIdToPatch(\"\"); // Clear the selected subscription value\n    setUserIdToPatch(\"\"); // Clear the user id value for user patch\n    setUserIdToEmail(\"\"); // Clear the user id value for sending email\n    toggleSuccesSendMail(false); // Reset email success state\n    togglePatchThisUser(false); // Reset user patch state\n    togglePatchThisSubscription(false); // Reset subscription patch state\n    toggleSuccesSendMail(false);\n    setSubscriptions([]);\n    // setPreviewUrl(\"\"); // Clear the image preview\n    // setItem(\"\"); // Clear the item value\n    // setTextarea(\"\"); /// You can add other state values that need to be reset here\n  };\n\n  // to get all users//////////////////////////////////////////////////////////////////////////////////////\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchUsers() {\n      // toggleDeleteUser(false);\n      togglePatchThisUser(false);\n      try {\n        const response = await axios.get('http://localhost:8083/users', {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        navigate('/Admin');\n        setUsers(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchUsers();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  // to delete user//////////////////////////////////////////////////////////////////////////////////////////\n\n  async function deleteUserFunction(e, username) {\n    e.preventDefault();\n    toggleError(false);\n    toggleLoading(true);\n    console.log(username.toLowerCase());\n    try {\n      const response = await axios.delete(`http://localhost:8083/users/${username.toLowerCase()}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      console.log(response);\n      resetFormFields();\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  /////  to get all items  ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchItems() {\n      // toggleDeleteThisItem(false);\n      try {\n        const response = await axios.get('http://localhost:8083/items', {\n          // item_id: item_id,\n          // name_Info: nameInfo,\n          // user_username: user_username,\n\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        navigate('/Admin');\n        setItems(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchItems();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  /////to delete item///////////////////////////////////////////////////////////////////////////////////////////\n\n  async function deleteItemFunction(e, idToDelete) {\n    e.preventDefault(idToDelete);\n    toggleError(false);\n    toggleLoading(true);\n    console.log();\n    try {\n      const response = await axios.delete(`http://localhost:8083/items/${idToDelete}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n        // signal: controller.signal,\n      });\n\n      // setItems(response.data);\n      console.log(response);\n      setIdToDelete(response.data);\n      resetFormFields();\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  /////  to get all subscriptions info ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchSubscriptions() {\n      togglePatchThisSubscription(false);\n      try {\n        const response = await axios.get('http://localhost:8083/subscriptions', {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        setSubscriptions(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchSubscriptions();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  /////// Change info bij subscriptions /////////////////////////////////////////\n\n  async function patchSubscription(data) {\n    // e.preventDefault();\n    toggleError(false);\n    toggleLoading(true);\n    try {\n      // const idAsLong = Number(id); // Converteer naar een Long\n      const response = await axios.patch(`http://localhost:8083/subscriptions/${subscriptionIdToPatch}`, data, {\n        // expirationDate: expirationDate,\n        // userInfo: userInfo,\n        // subscriptionStatus: subscriptionStatus,\n        // typeSubscription: typeSubscription,\n\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      togglePatchThisSubscription(true);\n      console.log('Subscription updated:', response.data);\n      resetFormFields();\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  /////// Change info bij users /////////////////////////////////////////\n  async function patchUser(data) {\n    toggleError(false);\n    toggleLoading(true);\n    try {\n      const response = await axios.patch(`http://localhost:8083/users/${userIdToPatch}`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      togglePatchThisUser(true);\n      console.log(response);\n      resetFormFields();\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  // //to send mail//////////////////////////////////////////////////////////////////////////////////\n  function emailUserFunction(data) {\n    data.recipient = userIdToEmail;\n    void sendMail(data);\n  }\n  async function sendMail(data) {\n    try {\n      const response = await axios.post('http://localhost:8083/sendMail', {\n        data\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        toggleSuccesSendMail(true);\n      }\n      console.log(\"Response adminpage\");\n      console.log(response.status);\n      resetFormFields();\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  // return//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"page\",\n    children: [isAuth && user.authority === \"ROLE_USER\" && !admin && /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"page\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sorry  \\uD83D\\uDE35\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Only for Administrators \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        icon: pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }, this), isAuth && user.authority === \"ROLE_ADMIN\" && !admin && /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"page2\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"margin-top2\",\n            children: \"Lijst van users \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"users\",\n          id: \"username\",\n          type: \"list\",\n          value: singleUser,\n          onChange: e => setSingleUser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"selecteer een username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), users.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: [user.email, \" - \", user.nameInfo, \" -\", user.username]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"button-box\",\n          className: \"button\",\n          type: \"submit\",\n          onClick: e => deleteUserFunction(e, singleUser),\n          children: \"Verwijderen van User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"margin-top2\",\n              children: \"Aanpassen van user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"user-change\",\n            onChange: e => setUserIdToPatch(e.currentTarget.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"selecteer een username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 33\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: user.username\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"margin-top2\",\n            onSubmit: handleSubmit1(patchUser),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"wachtwoord\",\n              type: \"text\",\n              name: \"password\",\n              className: \"input_text\",\n              register: register3,\n              errors: errors3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"username\",\n              type: \"text\",\n              name: \"username\",\n              className: \"input_text\",\n              register: register4,\n              errors: errors4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"button-ellips\",\n              children: \"versturen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 33\n            }, this), patchThisUser && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"margin-top1\",\n              children: \"De user is gewijzigd. Refresh de pagina.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 37\n            }, this)]\n          }, 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"margin-top2\",\n            children: \"Lijst van items \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"items\",\n          id: \"tags\",\n          type: \"list\",\n          value: toDelete,\n          onChange: e => setToDelete(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"selecteer een item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }, this), items.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.id,\n              children: [\" \", item.tags, \"-\", item.nameInfo, \"--item id/\", item.id]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"button-box\",\n          className: \"button\",\n          type: \"submit\",\n          onClick: e => deleteItemFunction(e, toDelete),\n          children: \"Verwijderen van Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"margin-top2\",\n              children: \"Lijst en aanpassen van subscriptions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"subscription-change\"\n            // id=\"typeSubscription\"\n            // type=\"list\"\n            // value={subscriptionIdToPatch}\n            ,\n            onChange: e => setSubscriptionIdToPatch(e.currentTarget.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"selecteer subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }, this), subscriptions.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: list.id,\n              children: [list.typeSubscription, \"- \", list.subscriptionStatus, \"-\", list.expirationDate]\n            }, list.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"margin-top3\",\n            onSubmit: handleSubmit3(patchSubscription),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"SubscriptionStatus\",\n              type: \"text\",\n              name: \"Status\"\n              // value=\"SubscriptionStatus\"\n              ,\n              className: \"input_text\",\n              register: register5,\n              errors: errors5\n              // onChange={(e) => setSubscriptionStatus(e.target.value)}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"expirationDate\",\n              type: \"date\",\n              name: \"expirationDate\"\n              // value=\"expirationDate\"\n              ,\n              className: \"input_text\",\n              register: register6,\n              errors: errors6\n              // onChange={(e) => setExpirationDate(e.target.value)}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"button-ellips\",\n              children: \"Aanpassen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 33\n            }, this), patchThisSubscription && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"margin-top1\",\n              children: \"De subscription is gewijzigd. Refresh de pagina.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 37\n            }, this)]\n          }, 3, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"margin-top2\",\n              children: \"Bericht versturen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit2(emailUserFunction),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"margin-bottom2\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"recipient\",\n                children: [\"Email naar:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"text_select\",\n                  onChange: e => setUserIdToEmail(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"selecteer een emailadres\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 45\n                  }, this), users.map(user => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: user.email\n                    }, user.username, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"subject\",\n              labelText: \"Onderwerp:\",\n              type: \"text\",\n              name: \"subject\",\n              className: \"input_text\",\n              placeholder: \"onderwerp\",\n              validationRules: {\n                required: {\n                  value: true,\n                  message: 'Dit veld is verplicht'\n                }\n              },\n              register: register7,\n              errors: errors7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 33\n            }, this), errors7.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors7.subject.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textarea_field\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"textarea_text\",\n                children: [\"Bericht:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"textarea_text\",\n                  name: \"msgBody\",\n                  rows: \"4\",\n                  cols: \"50\",\n                  placeholder: \"laat hier je bericht\",\n                  ...register8(\"msgBody\", {\n                    required: {\n                      maxLength: \"500\",\n                      message: 'Maximaal 500 karakters'\n                    }\n                  }),\n                  errors: errors8,\n                  children: errors8.msgBody && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: errors8.msgBody.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\"\n              //    className=\"button-ellips\"\n              ,\n              children: \"versturen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 33\n            }, this), succesSendMail && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"margin-top1\",\n              children: \" Email is verzonden.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 52\n            }, this)]\n          }, 2, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"rdHecybAWthS2ER6y8LZmk7fEGA=\", false, function () {\n  return [useNavigate, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["Header","bib","React","useContext","useEffect","useRef","useState","axios","Input","useForm","Button","Link","useNavigate","Subscription","AuthContext","pic","jsxDEV","_jsxDEV","Admin","_s","navigate","token","localStorage","getItem","error","toggleError","loading","toggleLoading","users","setUsers","singleUser","setSingleUser","toDelete","setToDelete","items","setItems","idToDelete","setIdToDelete","subscriptions","setSubscriptions","subscriptionsList","setSubscriptionsList","patchThisSubscription","togglePatchThisSubscription","subscriptionIdToPatch","setSubscriptionIdToPatch","handleSubmit","handleSubmit3","formState","errors3","register","handleSubmit1","errors","patchThisUser","togglePatchThisUser","userIdToPatch","setUserIdToPatch","isAuth","user","admin","toggleAdmin","register2","errors2","handleSubmit2","reset","userIdToEmail","setUserIdToEmail","succesSendMail","toggleSuccesSendMail","register4","handleSubmit4","resetForm4","errors4","register5","handleSubmit5","resetForm5","errors5","register6","handleSubmit6","resetForm6","errors6","register7","handleSubmit7","resetForm7","errors7","register8","handleSubmit8","resetForm8","errors8","resetFormFields","controller","AbortController","fetchUsers","response","get","headers","signal","data","e","console","cleanup","abort","deleteUserFunction","username","preventDefault","log","toLowerCase","delete","fetchItems","deleteItemFunction","fetchSubscriptions","patchSubscription","patch","patchUser","emailUserFunction","recipient","sendMail","post","status","className","children","authority","fileName","_jsxFileName","lineNumber","columnNumber","icon","name","id","type","value","onChange","target","map","email","nameInfo","onClick","currentTarget","onSubmit","labelText","register3","item","tags","list","typeSubscription","subscriptionStatus","expirationDate","htmlFor","placeholder","validationRules","required","message","subject","rows","cols","maxLength","msgBody","_c","$RefreshReg$"],"sources":["C:/Users/jftal/WebstormProjects/KLEDING_BIEB/src/pages/admin/Admin.js"],"sourcesContent":["\r\n\r\n\r\nimport Header from '../../components/header/Header';\r\nimport './Admin.css';\r\nimport bib from \"../../assets/Mar_Bib.jpg\";\r\n\r\nimport React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport './Admin.css';\r\nimport axios from \"axios\";\r\nimport Input from \"../../components/input/Input\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport Button from \"../../components/button/Button\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nimport {Subscription} from \"../subscription/Subscription\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport pic from \"../../assets/hilado-en-huso.jpg\";\r\n\r\n\r\n// class Admin extends React.Component {\r\n//     render() {\r\n\r\n\r\n\r\n\r\nfunction Admin() {\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem('token');\r\n    const [error, toggleError] = useState(false);\r\n    const [loading, toggleLoading] = useState(false);\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [singleUser, setSingleUser] = useState('');\r\n\r\n\r\n    const [toDelete, setToDelete] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    //  const [deleteThisItem, toggleDeleteThisItem] = useState(false);\r\n    //  const [singleItem, setSingleItem] = useState('');\r\n    //  const [item_id, setItem_id] = useState(0);\r\n    //  const [nameInfo, setNameInfo] = useState(\"\");\r\n\r\n\r\n    const [idToDelete, setIdToDelete] = useState(\"\");\r\n\r\n\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [subscriptionsList, setSubscriptionsList] = useState([]);\r\n\r\n    // const [userInfo, setUserInfo] = useState(\"\");\r\n    // const [expirationDate, setExpirationDate] = useState(\"\");\r\n    // const [subscriptionStatus, setSubscriptionStatus] = useState(\"\");\r\n    // const [typeSubscription, setTypeSubscription] = useState(\"\");\r\n    const [patchThisSubscription, togglePatchThisSubscription] = useState(false);\r\n    const [subscriptionIdToPatch, setSubscriptionIdToPatch] = useState(\"\");\r\n    const {handleSubmit: handleSubmit3, formState: {errors3}} = useForm();\r\n    // const { handleSubmit, formState: { errors4 } } = useForm();\r\n\r\n    //patch user\r\n    const {register, handleSubmit: handleSubmit1, formState: {errors}} = useForm();\r\n    const [patchThisUser, togglePatchThisUser] = useState(false);\r\n    const [userIdToPatch, setUserIdToPatch] = useState(\"\");\r\n\r\n    const {isAuth, user} = useContext(AuthContext);\r\n    const [admin, toggleAdmin] = useState(false);\r\n\r\n\r\n    //mail\r\n    const {register: register2, formState: {errors: errors2}, handleSubmit: handleSubmit2, reset} = useForm();\r\n    const [userIdToEmail, setUserIdToEmail] = useState(\"\");\r\n    const [succesSendMail, toggleSuccesSendMail] = useState(false);\r\n\r\n\r\n    const { register: register4, handleSubmit: handleSubmit4, reset: resetForm4, formState: { errors: errors4 } } = useForm();\r\n    const { register: register5, handleSubmit: handleSubmit5, reset: resetForm5, formState: { errors: errors5 } } = useForm();\r\n    const { register: register6, handleSubmit: handleSubmit6, reset: resetForm6, formState: { errors: errors6 } } = useForm();\r\n    const { register: register7, handleSubmit: handleSubmit7, reset: resetForm7, formState: { errors: errors7 } } = useForm();\r\n    const { register: register8, handleSubmit: handleSubmit8, reset: resetForm8, formState: { errors: errors8 } } = useForm();\r\n    const resetFormFields = () => {\r\n        setSingleUser(\"\"); // Clear the selected user value\r\n        setToDelete([]); // Clear the selected item value\r\n        setSubscriptionIdToPatch(\"\"); // Clear the selected subscription value\r\n        setUserIdToPatch(\"\"); // Clear the user id value for user patch\r\n        setUserIdToEmail(\"\"); // Clear the user id value for sending email\r\n        toggleSuccesSendMail(false); // Reset email success state\r\n        togglePatchThisUser(false); // Reset user patch state\r\n        togglePatchThisSubscription(false); // Reset subscription patch state\r\n        toggleSuccesSendMail(false);\r\n        setSubscriptions( []);\r\n        // setPreviewUrl(\"\"); // Clear the image preview\r\n        // setItem(\"\"); // Clear the item value\r\n        // setTextarea(\"\"); /// You can add other state values that need to be reset here\r\n    };\r\n\r\n\r\n\r\n    // to get all users//////////////////////////////////////////////////////////////////////////////////////\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n\r\n        async function fetchUsers() {\r\n\r\n            // toggleDeleteUser(false);\r\n            togglePatchThisUser(false);\r\n\r\n\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/users', {\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n\r\n\r\n                    signal: controller.signal,\r\n                });\r\n                navigate('/Admin');\r\n                setUsers(response.data);\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n\r\n        void fetchUsers();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        };\r\n    }, []);\r\n\r\n\r\n    // to delete user//////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    async function deleteUserFunction(e, username) {\r\n        e.preventDefault()\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        console.log(username.toLowerCase())\r\n        try {\r\n            const response = await axios.delete(`http://localhost:8083/users/${username.toLowerCase()}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                }\r\n            });\r\n            console.log(response)\r\n            resetFormFields();\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n/////  to get all items  ////////////////////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n        async function fetchItems() {\r\n            // toggleDeleteThisItem(false);\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/items', {\r\n                    // item_id: item_id,\r\n                    // name_Info: nameInfo,\r\n                    // user_username: user_username,\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                    signal: controller.signal,\r\n\r\n                });\r\n                navigate('/Admin');\r\n                setItems(response.data);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        void fetchItems();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    /////to delete item///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    async function deleteItemFunction(e, idToDelete) {\r\n        e.preventDefault(idToDelete);\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        console.log()\r\n\r\n        try {\r\n\r\n\r\n            const response = await axios.delete(`http://localhost:8083/items/${idToDelete}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n                // signal: controller.signal,\r\n            });\r\n\r\n            // setItems(response.data);\r\n            console.log(response)\r\n            setIdToDelete(response.data);\r\n            resetFormFields();\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n/////  to get all subscriptions info ////////////////////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n        async function fetchSubscriptions() {\r\n            togglePatchThisSubscription(false);\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/subscriptions', {\r\n\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                    signal: controller.signal,\r\n                });\r\n\r\n                setSubscriptions(response.data);\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n\r\n        void fetchSubscriptions();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        }\r\n    }, []);\r\n\r\n\r\n    /////// Change info bij subscriptions /////////////////////////////////////////\r\n\r\n\r\n    async function patchSubscription(data) {\r\n        // e.preventDefault();\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        try {\r\n\r\n\r\n\r\n            // const idAsLong = Number(id); // Converteer naar een Long\r\n            const response = await axios.patch(`http://localhost:8083/subscriptions/${subscriptionIdToPatch}`,\r\n                data, {\r\n                    // expirationDate: expirationDate,\r\n                    // userInfo: userInfo,\r\n                    // subscriptionStatus: subscriptionStatus,\r\n                    // typeSubscription: typeSubscription,\r\n\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                });\r\n            togglePatchThisSubscription(true);\r\n            console.log('Subscription updated:', response.data);\r\n            resetFormFields();\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n\r\n    /////// Change info bij users /////////////////////////////////////////\r\n    async function patchUser(data) {\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        try {\r\n            const response = await axios.patch(`http://localhost:8083/users/${userIdToPatch}`,\r\n                data,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                });\r\n            togglePatchThisUser(true);\r\n            console.log(response);\r\n            resetFormFields();\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n    // //to send mail//////////////////////////////////////////////////////////////////////////////////\r\n    function emailUserFunction(data) {\r\n        data.recipient = userIdToEmail;\r\n        void sendMail(data);\r\n    }\r\n\r\n\r\n    async function sendMail(data) {\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/sendMail', {\r\n                data\r\n            }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                }\r\n            });\r\n            if (response.status === 200) {\r\n                toggleSuccesSendMail(true);\r\n            }\r\n            console.log(\"Response adminpage\")\r\n            console.log(response.status);\r\n            resetFormFields();\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n// return//////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n\r\n\r\n        <main className=\"page\">\r\n            {(isAuth && user.authority === \"ROLE_USER\" && !admin) &&\r\n                <article className=\"page\" > <h1>Sorry  😵</h1>\r\n                    <h2>Only for Administrators </h2>\r\n\r\n                    <Header icon={pic}/>\r\n                </article>}\r\n            {(isAuth && user.authority === \"ROLE_ADMIN\" && !admin) &&\r\n\r\n                <article className=\"page2\">\r\n\r\n                    <fieldset>\r\n                        <legend> <h2 className=\"margin-top2\">Lijst van users </h2></legend>\r\n                        <select\r\n                            name=\"users\"\r\n                            id=\"username\"\r\n                            type=\"list\"\r\n                            value={singleUser}\r\n                            onChange={(e) => setSingleUser(e.target.value)}\r\n                        >\r\n                            <option>selecteer een username</option>\r\n                            {users.map((user) => {\r\n                                return <option key={user.id}\r\n                                               value={user.username}>\r\n                                    {user.email} - {user.nameInfo} -\r\n                                    {user.username}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                        <button id=\"button-box\" className=\"button\" type=\"submit\"\r\n\r\n                                onClick={(e) => deleteUserFunction(e, singleUser)}>\r\n                            Verwijderen van User\r\n                        </button>\r\n\r\n                    </fieldset>\r\n\r\n\r\n\r\n\r\n                    {/*change user///////////////////////////////////////////////////////////////////////////////////////*/}\r\n                    <section>\r\n                        <fieldset>\r\n                            <legend> <h2 className=\"margin-top2\">Aanpassen van user</h2></legend>\r\n\r\n                            <select\r\n                                className=\"user-change\"\r\n                                onChange={e => setUserIdToPatch(e.currentTarget.value)}\r\n                            >\r\n                                <option>selecteer een username</option>\r\n                                {users.map(user => (\r\n                                    <option\r\n                                        key={user.username}\r\n                                        value={user.username}\r\n                                    >\r\n                                        {user.username}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n\r\n                            <form\r\n                                key={1}\r\n                                className=\"margin-top2\"\r\n                                onSubmit={handleSubmit1(patchUser)}\r\n                            >\r\n                                <Input\r\n                                    labelText=\"wachtwoord\"\r\n                                    type=\"text\"\r\n                                    name=\"password\"\r\n                                    className=\"input_text\"\r\n                                    register={register3}\r\n                                    errors={errors3}\r\n                                />\r\n\r\n                                <Input\r\n                                    labelText=\"username\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    className=\"input_text\"\r\n                                    register={register4}\r\n                                    errors={errors4}\r\n                                />\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"button-ellips\"\r\n                                >\r\n                                    versturen\r\n                                </Button>\r\n                                {patchThisUser &&\r\n                                    <h4 className=\"margin-top1\">De user is gewijzigd. Refresh de pagina.</h4>}\r\n\r\n                            </form>\r\n                        </fieldset>\r\n                    </section>\r\n\r\n                    {/*Items lijst/////////////////////////////////////////////////////////////////////////.*/}\r\n                    <fieldset>\r\n                        <legend> <h2 className=\"margin-top2\">Lijst van items </h2></legend>\r\n\r\n\r\n                        <select\r\n                            name=\"items\"\r\n                            id=\"tags\"\r\n                            type=\"list\"\r\n                            value={toDelete}\r\n                            onChange={(e) => setToDelete(e.target.value)}\r\n                        >\r\n                            <option>selecteer een item</option>\r\n                            {items.map((item) => {\r\n                                return <option key={item.id}\r\n                                               value={item.id}> {item.tags}-{item.nameInfo}--item id/{item.id}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                        <button id=\"button-box\" className=\"button\" type=\"submit\"\r\n\r\n                                onClick={(e) => deleteItemFunction(e, toDelete)}>\r\n                            Verwijderen van Item\r\n                        </button>\r\n\r\n                    </fieldset>\r\n\r\n\r\n\r\n\r\n                    {/*//////////             Subscriptions lijst/////////////////////////////////////////////////////////////////////////*/}\r\n\r\n\r\n                    {/*<h2 className=\"margin-top2\">Lijst van subscriptions </h2>*/}\r\n                    {/*<select*/}\r\n                    {/*    name=\"subscriptions\"*/}\r\n                    {/*    id=\"typeSubscription\"*/}\r\n                    {/*    type=\"list\"*/}\r\n                    {/*    value={subscriptionsList}*/}\r\n                    {/*    onChange={(e) => setSubscriptionsList(e.target.value)}*/}\r\n                    {/*>*/}\r\n                    {/*    <option>selecteer een username</option>*/}\r\n                    {/*    {subscriptionsList.map((list) => {*/}\r\n                    {/*        return <option key={list.id}*/}\r\n                    {/*                       value={list.userInfo}>*/}\r\n                    {/*            {list.typeSubscription} - {list.subscriptionStatus} -*/}\r\n                    {/*            {list.expirationDate}*/}\r\n                    {/*        </option>*/}\r\n                    {/*    })}*/}\r\n\r\n                    {/*</select>*/}\r\n\r\n\r\n                    {/*change subscription ///////////////////////////////////////////////////////////////////////////////////////*/}\r\n                    <section>\r\n\r\n                        <fieldset>\r\n                            <legend><h2 className=\"margin-top2\">Lijst en aanpassen van subscriptions</h2></legend>\r\n\r\n                            <select\r\n                                className=\"subscription-change\"\r\n                                // id=\"typeSubscription\"\r\n                                // type=\"list\"\r\n                                // value={subscriptionIdToPatch}\r\n                                onChange={e => setSubscriptionIdToPatch(e.currentTarget.value)}\r\n                            >\r\n                                <option>selecteer subscription</option>\r\n                                {subscriptions.map(list => (\r\n                                    <option\r\n                                        key={list.id}\r\n                                        value={list.id}\r\n                                    >{list.typeSubscription}- {list.subscriptionStatus}-\r\n                                        {list.expirationDate}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n\r\n                            <form\r\n                                key={3}\r\n                                className=\"margin-top3\"\r\n                                onSubmit={handleSubmit3(patchSubscription)}\r\n                            >\r\n                                <Input\r\n                                    labelText=\"SubscriptionStatus\"\r\n                                    type=\"text\"\r\n                                    name=\"Status\"\r\n                                    // value=\"SubscriptionStatus\"\r\n                                    className=\"input_text\"\r\n                                    register={register5}\r\n                                    errors={errors5}\r\n                                    // onChange={(e) => setSubscriptionStatus(e.target.value)}\r\n                                />\r\n\r\n                                <Input\r\n                                    labelText=\"expirationDate\"\r\n                                    type=\"date\"\r\n                                    name=\"expirationDate\"\r\n                                    // value=\"expirationDate\"\r\n                                    className=\"input_text\"\r\n                                    register={register6}\r\n                                    errors={errors6}\r\n                                    // onChange={(e) => setExpirationDate(e.target.value)}\r\n                                />\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"button-ellips\"\r\n                                >\r\n                                    Aanpassen\r\n                                </Button>\r\n\r\n                                {patchThisSubscription &&\r\n                                    <h4 className=\"margin-top1\">De subscription is gewijzigd. Refresh de pagina.</h4>}\r\n\r\n                            </form>\r\n\r\n\r\n                        </fieldset>\r\n                    </section>\r\n\r\n\r\n\r\n                    {/*mail/////////////////////////////////////////////////////////////////////////.*/}\r\n\r\n                    <section>\r\n                        <fieldset>\r\n                            <legend>  <h2 className=\"margin-top2\">Bericht versturen</h2></legend>\r\n\r\n                            <form\r\n                                key={2}\r\n                                onSubmit={handleSubmit2(emailUserFunction)}\r\n                            >\r\n                                <div className=\"margin-bottom2\">\r\n\r\n\r\n                                    <label htmlFor=\"recipient\">\r\n                                        Email naar:\r\n                                        <select\r\n                                            className=\"text_select\"\r\n                                            onChange={e => setUserIdToEmail(e.target.value)}\r\n                                        >\r\n                                            <option>selecteer een emailadres</option>\r\n                                            {users.map((user) => {\r\n                                                return (\r\n                                                    <option\r\n                                                        key={user.username}\r\n\r\n                                                    >\r\n                                                        {user.email}\r\n                                                    </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <Input\r\n                                    id=\"subject\"\r\n                                    labelText=\"Onderwerp:\"\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    className=\"input_text\"\r\n                                    placeholder=\"onderwerp\"\r\n                                    validationRules={{\r\n                                        required: {\r\n                                            value: true,\r\n                                            message: 'Dit veld is verplicht',\r\n                                        }\r\n                                    }}\r\n                                    register={register7}\r\n                                    errors={errors7}\r\n                                />\r\n                                {errors7.subject && <p>{errors7.subject.message}</p>}\r\n\r\n\r\n                                <div className=\"textarea_field\">\r\n                                    <label htmlFor=\"textarea_text\">\r\n                                        Bericht:\r\n                                        <textarea\r\n                                            className=\"textarea_text\"\r\n                                            name=\"msgBody\"\r\n                                            rows=\"4\"\r\n                                            cols=\"50\"\r\n                                            placeholder=\"laat hier je bericht\"\r\n                                            {...register8(\"msgBody\", {\r\n                                                required: {\r\n                                                    maxLength: \"500\",\r\n                                                    message: 'Maximaal 500 karakters'\r\n                                                }\r\n                                            })}\r\n                                            errors={errors8}\r\n                                        >\r\n                        {errors8.msgBody && <p>{errors8.msgBody.message}</p>}\r\n                            </textarea>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    //    className=\"button-ellips\"\r\n\r\n                                >\r\n                                    versturen\r\n                                </Button>\r\n\r\n                                {succesSendMail && <h4 className=\"margin-top1\"> Email is verzonden.</h4>}\r\n                            </form>\r\n                        </fieldset>\r\n                    </section>\r\n\r\n                </article>}\r\n        </main>\r\n    );\r\n}\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}