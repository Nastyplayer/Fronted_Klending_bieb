{"ast":null,"code":"//\n// import React, {useContext, useEffect, useState} from 'react';\n// import {AuthContext} from \"../../context/AuthContext\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// import {useForm} from \"react-hook-form\";\n// import Header from \"../../components/header/Header\";\n// import pic from '../../../../KLEDING_BIEB/src/assets/hilado-en-huso.jpg';\n//\n// function Account() {\n//\n//     // const { register } = useForm( {fileName: ''});\n//     const navigate = useNavigate();\n//     const [email, setEmail] = useState(\"\");\n//     const [item, setItem] = useState(\"\");\n//     const [items, setItems] = useState([]);\n//     const [dateInfo, setDateInfo] = useState(\"\");\n//     const [username, setUsername] = useState(\"\");\n//     const [id, setId] = useState(false);\n//     //const {handleImageChance, setHandleImageChance} = useState(\"\");\n//     const [previewUrl, setPreviewUrl] = useState(\"\");\n//     const [file, setFile] = useState([]);\n//     const [item_id, setItem_id] = useState(0);\n//     const token = localStorage.getItem('token');\n//     const [addSuccesPhoto, toggleAddSuccessPhoto] = useState(false);\n//     const [nameInfo, setnameInfo] = useState(\"\");\n//     const {register: register2, formState: {errors: errors2}, handleSubmit: handleSubmit2, reset} = useForm();\n//     const [ textarea, setTextarea ] = useState('');\n//\n//     const resetFormFields = () => {\n//         setPreviewUrl(\"\"); // Clear the image preview\n//         setItem(\"\"); // Clear the item value\n//         setTextarea(\"\"); // Clear the textarea value\n//         setDateInfo(\"\");// Add other form fields you want to reset here\n//     };\n//\n//\n//     /////////////////////////////////////////////////////// // photo\n//     function handleImageChance(e) {\n//         const uploadedFile = e.target.files[0];\n//         console.log (uploadedFile);\n//         setFile(uploadedFile);\n//         setPreviewUrl(URL.createObjectURL(uploadedFile));\n//     }\n//\n//\n//\n//     async function sendImage(e) {\n//         e.preventDefault();\n//\n//         console.log(textarea)\n//         const formData = new FormData();\n//         formData.append(\"file\", file);\n//         //  data.tags = [];\n//\n//\n//\n//         try {\n//             const response = await axios.post(`http://localhost:8083/items/photo`, formData,\n//                 {\n//                     headers: {\n//                         \"Content-Type\": \"multipart/form-data\",\n//                         \"Authorization\": `Bearer ${token}`,\n//                     },\n//                 })\n//             setId(response.data);\n//             if (response.status === 204) {\n//                 toggleAddSuccessPhoto(true);\n//                 resetFormFields();\n//             }\n//             console.log(response)\n//             console.log(formData)\n//             navigate(\"/Account\");\n//         } catch (e) {\n//             console.error(e)\n//         }\n//\n//         return formData\n//     }\n//\n//\n// ////////////////////////////////////////////////////reserveren\n//\n//     const Order = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post(`http://localhost:8083/items`, {\n//                 nameInfo: nameInfo,\n//                 item_id: item_id,\n//                 dateInfo: dateInfo\n//             });\n//             console.log(response)\n//             resetFormFields();\n//             navigate(\"/Admin\");\n//         } catch (e) {\n//             console.log(e)\n//         }\n//     }\n// ///////////////////////////////////////////////////////////////////////////account\n//\n//\n//     useEffect(() => {\n//         async function fetchItems() {\n//             const token = localStorage.getItem('token')\n//\n//             try {\n//\n//                 const response = await axios.get(`http://localhost:8083/items`,\n//                     {\n//                         nameInfo: nameInfo,\n//                         item_id: item_id,\n//                         dateInfo: dateInfo,\n//\n//                         headers: {\n//                             \"Content-Type\": \"application/json\",\n//\n//                         },\n//                     })\n//                 setItems(response.data);\n//\n//                 console.log(response.data);\n//                 navigate(\"/Account\");\n//             } catch (e) {\n//\n//                 console.error(e);\n//\n//             }\n//         }\n//         void  fetchItems()\n//\n//     }, [])\n//\n//\n//\n//\n// //////////////////////////////////////////////////////////////////////\n//\n//     return (\n//         <p className=\"page2\">\n//             <h1>Leuk dat je langskomt! Maak een keuze</h1>\n//             <Header icon={pic}/>\n//\n//             <ul className=\"form-xtra\">\n//\n//                 <label htmlFor=\"name\">\n//\n//                     <strong>{username}</strong>\n//                     <strong> {email}</strong>\n//                     <div className=\"img-row\">\n//\n//                         <fieldset>\n//                             <legend><h2>Item afbelding uploaden:</h2></legend>\n//                             <form onSubmit={sendImage} >\n//                                 {/*<form onSubmit={handleSubmit2(sendImage)} ref={register2}>*/}\n//                                 <label htmlFor=\"item-image\">\n//                                     kies afbeelding\n//                                     <input onChange={handleImageChance} id=\"item_id\" type=\"file\"\n//\n//                                            name=\"upload\" accept=\"image.*\"/>\n//                                 </label>\n//\n//                                 {previewUrl &&\n//                                     <label> Preview:\n//\n//                                         <img src={previewUrl} alt=\"Voorbeeld van de afbeelding \"\n//                                              className=\"image-preview\"/>\n//                                     </label>\n//                                 }\n//\n//                                 <label htmlFor=\"Items-field\">Item\n//                                     <select\n//                                         name=\"items\"\n//                                         id=\"item_id\"\n//                                         type=\"list\"\n//                                         value={item}\n//                                         onChange={(e) => setItem(e.target.value)}\n//                                     >\n//                                         <option value=\"kies \">click hieronder aan wat van toepassing is</option>\n//                                         <option\n//                                             value=  {item.map}\n//\n//                                         ></option>\n//                                         <option value=\"sustainable\"> sustainable</option>\n//                                         <option value=\"biological\"> biological</option>\n//                                         <option value=\"organic\"> organic</option>\n//                                         <option value=\"pesticide-free\"> pesticide-free</option>\n//                                         <option value=\"additive-free\"> additive-free</option>\n//                                         <option value=\"non-chemical\"> non-chemical</option>\n//                                         <option value=\"minimalistic\"> minimalistic</option>\n//                                         <option value=\"linen\"> linen</option>\n//                                         <option value=\"silk\"> silk</option>\n//                                         <option value=\"cotton\"> cotton</option>\n//                                         <option value=\"wool\"> wool</option>\n//                                         <option value=\"organisch\"> organisch</option>\n//                                         <option value=\"wol\"> wol</option>\n//                                         <option value=\"linnen\"> linnen</option>\n//\n//                                     </select>\n//                                 </label>\n//\n//                                 <label htmlFor=\"FileName\">\n//                                                 <textarea\n//                                                     id=\"FileName\"\n//                                                     /// value={comment}\n//                                                     //  onChange={(e) => setComment(e.target.value)}\n//                                                     rows=\"5\"\n//                                                     cols=\"33\"\n//                                                     placeholder=\"vertel ons meer over de item\"\n//                                                     value={textarea}\n//                                                     onChange={(e) => setTextarea(e.target.value)}\n//                                                     validationRules={{\n//                                                         required: {\n//                                                             value: true,\n//                                                             message: 'Dit veld is verplicht',\n//                                                         }\n//                                                     }}\n//                                                     register={register2}\n//\n//                                                     errors={errors2}\n//                                                 />\n//                                     {errors2.subject && <p>{errors2.subject.message}</p>}\n//                                     {/*{ errors2.textarea && <p>{errors2.textarea.message}</p>}*/}\n//\n//                                     <button type=\"submit\"> Uploaden</button>\n//\n//\n//                                 </label>\n//\n//                             </form>\n//                         </fieldset>\n//                     </div>\n//\n//                 </label>\n//\n//                 <fieldset>\n//\n//\n//\n//                     <legend><h2>Reserveren van Items</h2></legend>\n//\n//\n//                     <label htmlFor=\"Items-field\">Item\n//                         <select\n//                             name=\"items\"\n//                             id=\"item_id\"\n//                             type=\"list\"\n//                             value={item}\n//                             onChange={(e) => setItem(e.target.value)}\n//                         >\n//                             <option value=\"kies \">Wat vind jij leuk? </option>\n//                             {items.map((item) => {\n//                                 return <option\n//                                     value={item.nameInfo}>\n//                                     item id: {item.id} - {item.nameInfo}\n//                                 </option>\n//                             })}\n//\n//\n//                         </select>\n//                     </label>\n//\n//                     <label htmlFor=\"date_Info-field\">Date\n//                         <input\n//                             name=\"date_Info\"\n//                             id=\"date_Info-field\"\n//                             value={dateInfo}\n//                             onChange={(e) => setDateInfo(e.target.value)}\n//                         />\n//                     </label>\n//\n//                     <button id=\"button-box\" className=\"button\" type=\"submit\" onClick={Order}>Verstuur</button>\n//                 </fieldset>\n//             </ul>\n//\n//\n//         </p>\n//\n//     );\n// }\n//\n// export default Account;\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//\n// import React, {useContext, useEffect, useState} from 'react';\n// import {AuthContext} from \"../../context/AuthContext\";\n// import {Link, useNavigate, useParams} from \"react-router-dom\";\n// import axios from \"axios\";\n// import login from \"../login/Login\";\n// import {useForm} from \"react-hook-form\";\n// import Header from \"../../components/header/Header\";\n// import pic from '../../../../KLEDING_BIEB/src/assets/hilado-en-huso.jpg';\n//\n// function Account() {\n//     const {isAuth, authAxios, noAuthAxios} = useContext(AuthContext);\n//     // const { register } = useForm( {fileName: ''});\n//     const navigate = useNavigate();\n//     const [email, setEmail] = useState(\"\");\n//     const [item, setItem] = useState(\"\");\n//     const [items, setItems] = useState([]);\n//     const [dateInfo, setDateInfo] = useState(\"\");\n//     const [username, setUsername] = useState(\"\");\n//     const [id, setId] = useState(false);\n//     //const {handleImageChance, setHandleImageChance} = useState(\"\");\n//     const [previewUrl, setPreviewUrl] = useState(\"\");\n//     const [file, setFile] = useState([]);\n//     const [item_Id, setItem_Id] = useState(0);\n//     const token = localStorage.getItem('token');\n//     const [addSuccesPhoto, toggleAddSuccessPhoto] = useState(false);\n//     const [nameInfo, setnameInfo] = useState(\"\");\n//     const {register: register2, formState: {errors: errors2}, handleSubmit} = useForm();\n//     const [textarea, setTextarea] = useState('');\n//     //const [reId, setReId] = useState('');\n//\n//     // const itemId = \"id\";\n//     // const nameInfo = \"http://localhost:8083/orders\"\n//     // const apiUrl = `http://localhost:8083/items/${nameInfo}/${itemId}`;\n//\n//     const resetFormFields = () => {\n//         setPreviewUrl(\"\"); // Clear the image preview\n//         setItem(\"\"); // Clear the item value\n//         setTextarea(\"\"); // Clear the textarea value\n//         setDateInfo(\"\");// Add other form fields you want to reset here\n//     };\n//\n//\n//\n//\n//     /////////////////////////////////////////////////////// // photo\n//     function handleImageChance(e) {\n//         const uploadedFile = e.target.files[0];\n//         console.log(uploadedFile);\n//         setFile(uploadedFile);\n//         setPreviewUrl(URL.createObjectURL(uploadedFile));\n//     }\n//\n//\n//     async function sendImage(e) {\n//         e.preventDefault();\n//\n//         console.log(textarea)\n//         const formData = new FormData();\n//         formData.append(\"file\", file);\n//         //  data.tags = [];\n//\n//\n//         try {\n//             const response = await axios.post(`http://localhost:8083/items/photo`, formData,\n//                 {\n//                     headers: {\n//                         \"Content-Type\": \"multipart/form-data\",\n//                         \"Authorization\": `Bearer ${token}`,\n//                     },\n//                 })\n//             setId(response.data);\n//             if (response.status === 204) {\n//                 toggleAddSuccessPhoto(true);\n//                 resetFormFields();\n//             }\n//             console.log(response)\n//             console.log(formData)\n//             navigate(\"/Account\");\n//         } catch (e) {\n//             console.error(e)\n//         }\n//\n//         return formData\n//     }\n//\n//\n// ////////////////////////////////////////////////////reserveren\n//\n//     // async function patchOrder() {\n//     //\n//     //     // // added because in backend the title is required (may not be blanc)\n//     //     // if (!data.Id) {\n//     //     //     data.Id = items.Id;\n//     //     // }\n//     // const response = await axios.post(`${nameInfo}`,  {\n//     // const response = await axios.patch(`${nameInfo}/${idItem}`, {\n//\n//\n//     const Order = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post(`http://localhost:8083/items`, {\n//\n//                 nameInfo: nameInfo,\n//                 item_Id: item_Id,\n//                 dateInfo: dateInfo\n//             });\n//             console.log(response)\n//             resetFormFields();\n//             navigate(\"/Account\");\n//         } catch (e) {\n//             console.log(e)\n//         }\n//     }\n//\n//     //\n//     // const Order = async (e) => {\n//     //     e.preventDefault();\n//     //     try {\n//     //          const response = await axios.post(`http://localhost:8083/items`, {\n//     //\n//     //             nameInfo: nameInfo,\n//     //             item_id: itemId,\n//     //             dateInfo: dateInfo\n//     //         });\n//     //         console.log(response)\n//     //         resetFormFields();\n//     //         navigate(\"/Account\");\n//     //     } catch (e) {\n//     //         console.log(e)\n//     //     }\n//     // }\n// ///////////////////////////////////////////////////////////////////////////account\n//\n//\n//     useEffect(() => {\n//\n//         //     // Controleer of nameInfo en itemId een waarde hebben voordat je het GET-verzoek uitvoert\n//         //     if (nameInfo && itemId) {\n//         //         fetchItems();\n//         //     }\n//         // }, [nameInfo, itemId]);\n//\n//         async function fetchItems() {\n//             const token = localStorage.getItem('token')\n//\n//             try {\n//\n//\n//                 //const response = await axios.get('${nameInfo}/${itemId}',   {\n//                 const response = await axios.get(`http://localhost:8083/items`, {\n//\n//                     nameInfo: nameInfo,\n//                     item_Id: item_Id,\n//                     date_Info: dateInfo,\n//\n//                     headers: {\n//                         \"Content-Type\": \"application/json\",\n//\n//                     },\n//                 })\n//                 setItems(response.data);\n//\n//                 console.log(response.data);\n//                 navigate(\"/Account\");\n//             } catch (e) {\n//\n//                 console.error(e);\n//\n//             }\n//         }\n//\n//         void fetchItems()\n//\n//     }, [])\n//\n//\n//\n//\n// //////////////////////////////////////////////////////////////////////\n//\n//     return (\n//         <p className=\"page2\">\n//             <h1>Leuk dat je langskomt! Maak een keuze</h1>\n//             <Header icon={pic}/>\n//\n//             <ul className=\"form-xtra\">\n//\n//\n//\n//                 <label htmlFor=\"name\">\n//\n//                     <strong>{username}</strong>\n//                     <strong> {email}</strong>\n//                     <div className=\"img-row\">\n//\n//                         <fieldset>\n//                             <legend><h2>Item afbelding uploaden:</h2></legend>\n//                             <form onSubmit={sendImage} >\n//                                 {/*<form onSubmit={handleSubmit2(sendImage)} ref={register2}>*/}\n//                                 <label htmlFor=\"item-image\">\n//                                     kies afbeelding\n//                                     <input onChange={handleImageChance} id=\"item_id\" type=\"file\"\n//\n//                                            name=\"upload\" accept=\"image.*\"/>\n//                                 </label>\n//\n//                                 {previewUrl &&\n//                                     <label> Preview:\n//\n//                                         <img src={previewUrl} alt=\"Voorbeeld van de afbeelding \"\n//                                              className=\"image-preview\"/>\n//                                     </label>\n//                                 }\n//\n//                                 <label htmlFor=\"Items-field\">Item\n//                                     <select\n//                                         name=\"items\"\n//                                         id=\"item_id\"\n//                                         type=\"list\"\n//                                         value={item}\n//                                         onChange={(e) => setItem(e.target.value)}\n//                                     >\n//                                         <option value=\"kies \">click hieronder aan wat van toepassing is</option>\n//                                         <option\n//                                             value=  {item.map}\n//\n//                                         ></option>\n//                                         <option value=\"sustainable\"> sustainable</option>\n//                                         <option value=\"biological\"> biological</option>\n//                                         <option value=\"organic\"> organic</option>\n//                                         <option value=\"pesticide-free\"> pesticide-free</option>\n//                                         <option value=\"additive-free\"> additive-free</option>\n//                                         <option value=\"non-chemical\"> non-chemical</option>\n//                                         <option value=\"minimalistic\"> minimalistic</option>\n//                                         <option value=\"linen\"> linen</option>\n//                                         <option value=\"silk\"> silk</option>\n//                                         <option value=\"cotton\"> cotton</option>\n//                                         <option value=\"wool\"> wool</option>\n//                                         <option value=\"organisch\"> organisch</option>\n//                                         <option value=\"wol\"> wol</option>\n//                                         <option value=\"linnen\"> linnen</option>\n//\n//                                     </select>\n//                                 </label>\n//\n//                                 <label htmlFor=\"FileName\">\n//                                                 <textarea\n//                                                     id=\"FileName\"\n//                                                     /// value={comment}\n//                                                     //  onChange={(e) => setComment(e.target.value)}\n//                                                     rows=\"5\"\n//                                                     cols=\"33\"\n//                                                     placeholder=\"vertel ons meer over de item\"\n//                                                     value={textarea}\n//                                                     onChange={(e) => setTextarea(e.target.value)}\n//                                                     validationRules={{\n//                                                         required: {\n//                                                             value: true,\n//                                                             message: 'Dit veld is verplicht',\n//                                                         }\n//                                                     }}\n//                                                     register={register2}\n//\n//                                                     errors={errors2}\n//                                                 />\n//                                     {errors2.subject && <p>{errors2.subject.message}</p>}\n//                                     {/*{ errors2.textarea && <p>{errors2.textarea.message}</p>}*/}\n//\n//                                     <button type=\"submit\"> Uploaden</button>\n//\n//\n//                                 </label>\n//\n//                             </form>\n//                         </fieldset>\n//                     </div>\n//\n//                 </label>\n//\n//\n//                 <form onSubmit={handleSubmit(Order)}>\n//                     <fieldset>\n//\n//                         <legend><h2>Reserveren van Items</h2></legend>\n//\n//\n//                         <label htmlFor=\"Items-field\">Item\n//                             <select\n//                                 name=\"items\"\n//                                 id=\"item_id\"\n//                                 type=\"list\"\n//                                 value={item}\n//                                 onChange={(e) => setItem(e.target.value)}\n//                             >\n//                                 <option value=\"kies \">Wat vind jij leuk? </option>\n//                                 {items.map((item) => (\n//                                     // return <option value={item.nameInfo}>\n//                              <option value={item.nameInfo}>\n//                                         {item.nameInfo} - id nr {item.id}\n//                                     </option>\n//                                 )  )}\n//\n//\n//                             </select>\n//                         </label>\n//\n//                         <label htmlFor=\"date_Info-field\">Date\n//                             <input\n//                                 name=\"date_Info\"\n//                                 id=\"date_Info-field\"\n//                                 value={dateInfo}\n//                                 onChange={(e) => setDateInfo(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <button id=\"button-box\" className=\"button\" type=\"submit\" onClick={Order}>Verstuur</button>\n//                     </fieldset>\n//                 </form>\n//             </ul>\n//\n//\n//         </p>\n//\n//     );\n// }\n//\n// export default Account;\n//\n\n// import React, {useState} from 'react';\n// import { useForm } from 'react-hook-form';\n// import pic from '../../../../KLEDING_BIEB/src/assets/hilado-en-huso.jpg';\n// import Header from \"../../components/header/Header\";\n// import axios from \"axios\";\n//\n//\n//\n//\n// function Contact () {\n//     const [username, setUsername] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [comment, setComment] = useState('');\n//   //  const [addSucces, toggleAddSucces] = useState(false);\n//     const {toggleSuccessAdd} = useState(true);\n//      const { register } = useForm( {\n//\n//\n//         username: '',\n//         email: '',\n//         comments: '',\n//         conditions: false,\n//     });\n//\n// //   function handleFormSubmit (data) {\n// //       console.log(data);\n// //   }\n//\n//\n//\n//\n//\n//     async function addContactUser(e) {\n//         e.preventDefault();\n//         console.log(username, email, comment);\n//         try {\n//             const response = await axios.post('http://localhost:8083/users', {\n//\n//      username: username,\n//          email: email,  });\n//\n//             if (response.status !== 201) {\n//                 toggleSuccessAdd(false);\n//             }\n//             console.log({\n//                 email: email,\n//                 comment: comment,\n//                 username: username,\n//             })\n//\n//         } catch (e) {\n//             console.error(e)\n//         }\n//\n//     }\n//\n//\n//\n//     return (\n//\n//         <div className=\"page2\">\n//\n//             <Header icon={pic}/>\n//             <form  onSubmit={addContactUser}>\n//\n//\n//             <fieldset>\n//                 <legend><h2>Gegevens</h2></legend>\n//\n//                 <label  htmlFor=\"details-name\">\n//                     Naam :\n//                     <input\n//                         type=\"text\"\n//                         id=\"username\"\n//                       //  value={username}\n//                       //  onChange={(e) => setUsername(e.target.value)}\n//                        {...register(\"username\")}\n//                     />\n//                 </label>\n//\n//                 <label htmlFor=\"details-email\">\n//                     E-mail:\n//                     <input\n//                         type=\"text\"\n//                         id=\"email\"\n//                        // value={email}\n//                        // onChange={(e) => setEmail(e.target.value)}\n//\n//                        {...register(\"email\")}\n//                     />\n//                 </label>\n//\n//             </fieldset>\n//\n//             <fieldset>\n//\n//                 <legend><h2>Jouw review</h2></legend>\n//\n//                 <label htmlFor=\"comments\">\n//                     <h3>Opmerkingen:</h3>\n//                     <textarea\n//\n//                         id=\"comments\"\n//                        /// value={comment}\n//                       //  onChange={(e) => setComment(e.target.value)}\n//                         rows=\"10\"\n//                         cols=\"60\"\n//                         placeholder=\"Laat ons weten wat jij van vindt\"\n//\n//                      {...register(\"comments\")}\n//                     />\n//                 </label>\n//\n//                 <label htmlFor=\"nieuws\">\n//\n//                     <input\n//                         type=\"checkbox\"\n//\n//                         {...register(\"nieuws\")}\n//\n//                     />\n//                     Ik schrijf me in voor de nieuwe collectie\n//\n//                 </label>\n//\n//                 <button type=\"submit\">\n//                     Versturen\n//                 </button>\n//             </fieldset>\n//         </form>\n//\n//         </div>\n//     );\n// }\n//\n// export default Contact;\n//\n//\n//\n//\n//\n//\n//\n// // //33-54   <form  onSubmit={handleSubmit(handleFormSubmit)}>\n// //<form  onSubmit={addUserContact}>\n//\n// //         const { register, handleSubmit } = useForm({\n// //\n// //\n// //             username: '',\n// //             email: '',\n// //             comments: '',\n// //             conditions: false,\n// //         });\n//\n//\n// // async function addUserContact(e) {\n// //     e.preventDefault();\n// //     console.log(username, email, comment);\n// //\n// //     try {\n// //         const response = await axios.post(`http://localhost:8083/users'),\n// // data:{\n// //     username: username,\n// //         email: email,\n// //         textarea: comment,\n// // } );\n// //         Console.log(response.data);\n// //\n// //         } catch (e) {\n// //         console.error(e);\n// //         }\n// //\n// // }\n//\n//","map":{"version":3,"names":[],"sources":["C:/Users/jftal/WebstormProjects/KLEDING_BIEB/src/pages/contact/Contact.js"],"sourcesContent":["//\r\n// import React, {useContext, useEffect, useState} from 'react';\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n// import {useNavigate} from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n//\r\n// import {useForm} from \"react-hook-form\";\r\n// import Header from \"../../components/header/Header\";\r\n// import pic from '../../../../KLEDING_BIEB/src/assets/hilado-en-huso.jpg';\r\n//\r\n// function Account() {\r\n//\r\n//     // const { register } = useForm( {fileName: ''});\r\n//     const navigate = useNavigate();\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [item, setItem] = useState(\"\");\r\n//     const [items, setItems] = useState([]);\r\n//     const [dateInfo, setDateInfo] = useState(\"\");\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [id, setId] = useState(false);\r\n//     //const {handleImageChance, setHandleImageChance} = useState(\"\");\r\n//     const [previewUrl, setPreviewUrl] = useState(\"\");\r\n//     const [file, setFile] = useState([]);\r\n//     const [item_id, setItem_id] = useState(0);\r\n//     const token = localStorage.getItem('token');\r\n//     const [addSuccesPhoto, toggleAddSuccessPhoto] = useState(false);\r\n//     const [nameInfo, setnameInfo] = useState(\"\");\r\n//     const {register: register2, formState: {errors: errors2}, handleSubmit: handleSubmit2, reset} = useForm();\r\n//     const [ textarea, setTextarea ] = useState('');\r\n//\r\n//     const resetFormFields = () => {\r\n//         setPreviewUrl(\"\"); // Clear the image preview\r\n//         setItem(\"\"); // Clear the item value\r\n//         setTextarea(\"\"); // Clear the textarea value\r\n//         setDateInfo(\"\");// Add other form fields you want to reset here\r\n//     };\r\n//\r\n//\r\n//     /////////////////////////////////////////////////////// // photo\r\n//     function handleImageChance(e) {\r\n//         const uploadedFile = e.target.files[0];\r\n//         console.log (uploadedFile);\r\n//         setFile(uploadedFile);\r\n//         setPreviewUrl(URL.createObjectURL(uploadedFile));\r\n//     }\r\n//\r\n//\r\n//\r\n//     async function sendImage(e) {\r\n//         e.preventDefault();\r\n//\r\n//         console.log(textarea)\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", file);\r\n//         //  data.tags = [];\r\n//\r\n//\r\n//\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:8083/items/photo`, formData,\r\n//                 {\r\n//                     headers: {\r\n//                         \"Content-Type\": \"multipart/form-data\",\r\n//                         \"Authorization\": `Bearer ${token}`,\r\n//                     },\r\n//                 })\r\n//             setId(response.data);\r\n//             if (response.status === 204) {\r\n//                 toggleAddSuccessPhoto(true);\r\n//                 resetFormFields();\r\n//             }\r\n//             console.log(response)\r\n//             console.log(formData)\r\n//             navigate(\"/Account\");\r\n//         } catch (e) {\r\n//             console.error(e)\r\n//         }\r\n//\r\n//         return formData\r\n//     }\r\n//\r\n//\r\n// ////////////////////////////////////////////////////reserveren\r\n//\r\n//     const Order = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:8083/items`, {\r\n//                 nameInfo: nameInfo,\r\n//                 item_id: item_id,\r\n//                 dateInfo: dateInfo\r\n//             });\r\n//             console.log(response)\r\n//             resetFormFields();\r\n//             navigate(\"/Admin\");\r\n//         } catch (e) {\r\n//             console.log(e)\r\n//         }\r\n//     }\r\n// ///////////////////////////////////////////////////////////////////////////account\r\n//\r\n//\r\n//     useEffect(() => {\r\n//         async function fetchItems() {\r\n//             const token = localStorage.getItem('token')\r\n//\r\n//             try {\r\n//\r\n//                 const response = await axios.get(`http://localhost:8083/items`,\r\n//                     {\r\n//                         nameInfo: nameInfo,\r\n//                         item_id: item_id,\r\n//                         dateInfo: dateInfo,\r\n//\r\n//                         headers: {\r\n//                             \"Content-Type\": \"application/json\",\r\n//\r\n//                         },\r\n//                     })\r\n//                 setItems(response.data);\r\n//\r\n//                 console.log(response.data);\r\n//                 navigate(\"/Account\");\r\n//             } catch (e) {\r\n//\r\n//                 console.error(e);\r\n//\r\n//             }\r\n//         }\r\n//         void  fetchItems()\r\n//\r\n//     }, [])\r\n//\r\n//\r\n//\r\n//\r\n// //////////////////////////////////////////////////////////////////////\r\n//\r\n//     return (\r\n//         <p className=\"page2\">\r\n//             <h1>Leuk dat je langskomt! Maak een keuze</h1>\r\n//             <Header icon={pic}/>\r\n//\r\n//             <ul className=\"form-xtra\">\r\n//\r\n//                 <label htmlFor=\"name\">\r\n//\r\n//                     <strong>{username}</strong>\r\n//                     <strong> {email}</strong>\r\n//                     <div className=\"img-row\">\r\n//\r\n//                         <fieldset>\r\n//                             <legend><h2>Item afbelding uploaden:</h2></legend>\r\n//                             <form onSubmit={sendImage} >\r\n//                                 {/*<form onSubmit={handleSubmit2(sendImage)} ref={register2}>*/}\r\n//                                 <label htmlFor=\"item-image\">\r\n//                                     kies afbeelding\r\n//                                     <input onChange={handleImageChance} id=\"item_id\" type=\"file\"\r\n//\r\n//                                            name=\"upload\" accept=\"image.*\"/>\r\n//                                 </label>\r\n//\r\n//                                 {previewUrl &&\r\n//                                     <label> Preview:\r\n//\r\n//                                         <img src={previewUrl} alt=\"Voorbeeld van de afbeelding \"\r\n//                                              className=\"image-preview\"/>\r\n//                                     </label>\r\n//                                 }\r\n//\r\n//                                 <label htmlFor=\"Items-field\">Item\r\n//                                     <select\r\n//                                         name=\"items\"\r\n//                                         id=\"item_id\"\r\n//                                         type=\"list\"\r\n//                                         value={item}\r\n//                                         onChange={(e) => setItem(e.target.value)}\r\n//                                     >\r\n//                                         <option value=\"kies \">click hieronder aan wat van toepassing is</option>\r\n//                                         <option\r\n//                                             value=  {item.map}\r\n//\r\n//                                         ></option>\r\n//                                         <option value=\"sustainable\"> sustainable</option>\r\n//                                         <option value=\"biological\"> biological</option>\r\n//                                         <option value=\"organic\"> organic</option>\r\n//                                         <option value=\"pesticide-free\"> pesticide-free</option>\r\n//                                         <option value=\"additive-free\"> additive-free</option>\r\n//                                         <option value=\"non-chemical\"> non-chemical</option>\r\n//                                         <option value=\"minimalistic\"> minimalistic</option>\r\n//                                         <option value=\"linen\"> linen</option>\r\n//                                         <option value=\"silk\"> silk</option>\r\n//                                         <option value=\"cotton\"> cotton</option>\r\n//                                         <option value=\"wool\"> wool</option>\r\n//                                         <option value=\"organisch\"> organisch</option>\r\n//                                         <option value=\"wol\"> wol</option>\r\n//                                         <option value=\"linnen\"> linnen</option>\r\n//\r\n//                                     </select>\r\n//                                 </label>\r\n//\r\n//                                 <label htmlFor=\"FileName\">\r\n//                                                 <textarea\r\n//                                                     id=\"FileName\"\r\n//                                                     /// value={comment}\r\n//                                                     //  onChange={(e) => setComment(e.target.value)}\r\n//                                                     rows=\"5\"\r\n//                                                     cols=\"33\"\r\n//                                                     placeholder=\"vertel ons meer over de item\"\r\n//                                                     value={textarea}\r\n//                                                     onChange={(e) => setTextarea(e.target.value)}\r\n//                                                     validationRules={{\r\n//                                                         required: {\r\n//                                                             value: true,\r\n//                                                             message: 'Dit veld is verplicht',\r\n//                                                         }\r\n//                                                     }}\r\n//                                                     register={register2}\r\n//\r\n//                                                     errors={errors2}\r\n//                                                 />\r\n//                                     {errors2.subject && <p>{errors2.subject.message}</p>}\r\n//                                     {/*{ errors2.textarea && <p>{errors2.textarea.message}</p>}*/}\r\n//\r\n//                                     <button type=\"submit\"> Uploaden</button>\r\n//\r\n//\r\n//                                 </label>\r\n//\r\n//                             </form>\r\n//                         </fieldset>\r\n//                     </div>\r\n//\r\n//                 </label>\r\n//\r\n//                 <fieldset>\r\n//\r\n//\r\n//\r\n//                     <legend><h2>Reserveren van Items</h2></legend>\r\n//\r\n//\r\n//                     <label htmlFor=\"Items-field\">Item\r\n//                         <select\r\n//                             name=\"items\"\r\n//                             id=\"item_id\"\r\n//                             type=\"list\"\r\n//                             value={item}\r\n//                             onChange={(e) => setItem(e.target.value)}\r\n//                         >\r\n//                             <option value=\"kies \">Wat vind jij leuk? </option>\r\n//                             {items.map((item) => {\r\n//                                 return <option\r\n//                                     value={item.nameInfo}>\r\n//                                     item id: {item.id} - {item.nameInfo}\r\n//                                 </option>\r\n//                             })}\r\n//\r\n//\r\n//                         </select>\r\n//                     </label>\r\n//\r\n//                     <label htmlFor=\"date_Info-field\">Date\r\n//                         <input\r\n//                             name=\"date_Info\"\r\n//                             id=\"date_Info-field\"\r\n//                             value={dateInfo}\r\n//                             onChange={(e) => setDateInfo(e.target.value)}\r\n//                         />\r\n//                     </label>\r\n//\r\n//                     <button id=\"button-box\" className=\"button\" type=\"submit\" onClick={Order}>Verstuur</button>\r\n//                 </fieldset>\r\n//             </ul>\r\n//\r\n//\r\n//         </p>\r\n//\r\n//     );\r\n// }\r\n//\r\n// export default Account;\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n//\r\n// import React, {useContext, useEffect, useState} from 'react';\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n// import {Link, useNavigate, useParams} from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import login from \"../login/Login\";\r\n// import {useForm} from \"react-hook-form\";\r\n// import Header from \"../../components/header/Header\";\r\n// import pic from '../../../../KLEDING_BIEB/src/assets/hilado-en-huso.jpg';\r\n//\r\n// function Account() {\r\n//     const {isAuth, authAxios, noAuthAxios} = useContext(AuthContext);\r\n//     // const { register } = useForm( {fileName: ''});\r\n//     const navigate = useNavigate();\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [item, setItem] = useState(\"\");\r\n//     const [items, setItems] = useState([]);\r\n//     const [dateInfo, setDateInfo] = useState(\"\");\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [id, setId] = useState(false);\r\n//     //const {handleImageChance, setHandleImageChance} = useState(\"\");\r\n//     const [previewUrl, setPreviewUrl] = useState(\"\");\r\n//     const [file, setFile] = useState([]);\r\n//     const [item_Id, setItem_Id] = useState(0);\r\n//     const token = localStorage.getItem('token');\r\n//     const [addSuccesPhoto, toggleAddSuccessPhoto] = useState(false);\r\n//     const [nameInfo, setnameInfo] = useState(\"\");\r\n//     const {register: register2, formState: {errors: errors2}, handleSubmit} = useForm();\r\n//     const [textarea, setTextarea] = useState('');\r\n//     //const [reId, setReId] = useState('');\r\n//\r\n//     // const itemId = \"id\";\r\n//     // const nameInfo = \"http://localhost:8083/orders\"\r\n//     // const apiUrl = `http://localhost:8083/items/${nameInfo}/${itemId}`;\r\n//\r\n//     const resetFormFields = () => {\r\n//         setPreviewUrl(\"\"); // Clear the image preview\r\n//         setItem(\"\"); // Clear the item value\r\n//         setTextarea(\"\"); // Clear the textarea value\r\n//         setDateInfo(\"\");// Add other form fields you want to reset here\r\n//     };\r\n//\r\n//\r\n//\r\n//\r\n//     /////////////////////////////////////////////////////// // photo\r\n//     function handleImageChance(e) {\r\n//         const uploadedFile = e.target.files[0];\r\n//         console.log(uploadedFile);\r\n//         setFile(uploadedFile);\r\n//         setPreviewUrl(URL.createObjectURL(uploadedFile));\r\n//     }\r\n//\r\n//\r\n//     async function sendImage(e) {\r\n//         e.preventDefault();\r\n//\r\n//         console.log(textarea)\r\n//         const formData = new FormData();\r\n//         formData.append(\"file\", file);\r\n//         //  data.tags = [];\r\n//\r\n//\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:8083/items/photo`, formData,\r\n//                 {\r\n//                     headers: {\r\n//                         \"Content-Type\": \"multipart/form-data\",\r\n//                         \"Authorization\": `Bearer ${token}`,\r\n//                     },\r\n//                 })\r\n//             setId(response.data);\r\n//             if (response.status === 204) {\r\n//                 toggleAddSuccessPhoto(true);\r\n//                 resetFormFields();\r\n//             }\r\n//             console.log(response)\r\n//             console.log(formData)\r\n//             navigate(\"/Account\");\r\n//         } catch (e) {\r\n//             console.error(e)\r\n//         }\r\n//\r\n//         return formData\r\n//     }\r\n//\r\n//\r\n// ////////////////////////////////////////////////////reserveren\r\n//\r\n//     // async function patchOrder() {\r\n//     //\r\n//     //     // // added because in backend the title is required (may not be blanc)\r\n//     //     // if (!data.Id) {\r\n//     //     //     data.Id = items.Id;\r\n//     //     // }\r\n//     // const response = await axios.post(`${nameInfo}`,  {\r\n//     // const response = await axios.patch(`${nameInfo}/${idItem}`, {\r\n//\r\n//\r\n//     const Order = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:8083/items`, {\r\n//\r\n//                 nameInfo: nameInfo,\r\n//                 item_Id: item_Id,\r\n//                 dateInfo: dateInfo\r\n//             });\r\n//             console.log(response)\r\n//             resetFormFields();\r\n//             navigate(\"/Account\");\r\n//         } catch (e) {\r\n//             console.log(e)\r\n//         }\r\n//     }\r\n//\r\n//     //\r\n//     // const Order = async (e) => {\r\n//     //     e.preventDefault();\r\n//     //     try {\r\n//     //          const response = await axios.post(`http://localhost:8083/items`, {\r\n//     //\r\n//     //             nameInfo: nameInfo,\r\n//     //             item_id: itemId,\r\n//     //             dateInfo: dateInfo\r\n//     //         });\r\n//     //         console.log(response)\r\n//     //         resetFormFields();\r\n//     //         navigate(\"/Account\");\r\n//     //     } catch (e) {\r\n//     //         console.log(e)\r\n//     //     }\r\n//     // }\r\n// ///////////////////////////////////////////////////////////////////////////account\r\n//\r\n//\r\n//     useEffect(() => {\r\n//\r\n//         //     // Controleer of nameInfo en itemId een waarde hebben voordat je het GET-verzoek uitvoert\r\n//         //     if (nameInfo && itemId) {\r\n//         //         fetchItems();\r\n//         //     }\r\n//         // }, [nameInfo, itemId]);\r\n//\r\n//         async function fetchItems() {\r\n//             const token = localStorage.getItem('token')\r\n//\r\n//             try {\r\n//\r\n//\r\n//                 //const response = await axios.get('${nameInfo}/${itemId}',   {\r\n//                 const response = await axios.get(`http://localhost:8083/items`, {\r\n//\r\n//                     nameInfo: nameInfo,\r\n//                     item_Id: item_Id,\r\n//                     date_Info: dateInfo,\r\n//\r\n//                     headers: {\r\n//                         \"Content-Type\": \"application/json\",\r\n//\r\n//                     },\r\n//                 })\r\n//                 setItems(response.data);\r\n//\r\n//                 console.log(response.data);\r\n//                 navigate(\"/Account\");\r\n//             } catch (e) {\r\n//\r\n//                 console.error(e);\r\n//\r\n//             }\r\n//         }\r\n//\r\n//         void fetchItems()\r\n//\r\n//     }, [])\r\n//\r\n//\r\n//\r\n//\r\n// //////////////////////////////////////////////////////////////////////\r\n//\r\n//     return (\r\n//         <p className=\"page2\">\r\n//             <h1>Leuk dat je langskomt! Maak een keuze</h1>\r\n//             <Header icon={pic}/>\r\n//\r\n//             <ul className=\"form-xtra\">\r\n//\r\n//\r\n//\r\n//                 <label htmlFor=\"name\">\r\n//\r\n//                     <strong>{username}</strong>\r\n//                     <strong> {email}</strong>\r\n//                     <div className=\"img-row\">\r\n//\r\n//                         <fieldset>\r\n//                             <legend><h2>Item afbelding uploaden:</h2></legend>\r\n//                             <form onSubmit={sendImage} >\r\n//                                 {/*<form onSubmit={handleSubmit2(sendImage)} ref={register2}>*/}\r\n//                                 <label htmlFor=\"item-image\">\r\n//                                     kies afbeelding\r\n//                                     <input onChange={handleImageChance} id=\"item_id\" type=\"file\"\r\n//\r\n//                                            name=\"upload\" accept=\"image.*\"/>\r\n//                                 </label>\r\n//\r\n//                                 {previewUrl &&\r\n//                                     <label> Preview:\r\n//\r\n//                                         <img src={previewUrl} alt=\"Voorbeeld van de afbeelding \"\r\n//                                              className=\"image-preview\"/>\r\n//                                     </label>\r\n//                                 }\r\n//\r\n//                                 <label htmlFor=\"Items-field\">Item\r\n//                                     <select\r\n//                                         name=\"items\"\r\n//                                         id=\"item_id\"\r\n//                                         type=\"list\"\r\n//                                         value={item}\r\n//                                         onChange={(e) => setItem(e.target.value)}\r\n//                                     >\r\n//                                         <option value=\"kies \">click hieronder aan wat van toepassing is</option>\r\n//                                         <option\r\n//                                             value=  {item.map}\r\n//\r\n//                                         ></option>\r\n//                                         <option value=\"sustainable\"> sustainable</option>\r\n//                                         <option value=\"biological\"> biological</option>\r\n//                                         <option value=\"organic\"> organic</option>\r\n//                                         <option value=\"pesticide-free\"> pesticide-free</option>\r\n//                                         <option value=\"additive-free\"> additive-free</option>\r\n//                                         <option value=\"non-chemical\"> non-chemical</option>\r\n//                                         <option value=\"minimalistic\"> minimalistic</option>\r\n//                                         <option value=\"linen\"> linen</option>\r\n//                                         <option value=\"silk\"> silk</option>\r\n//                                         <option value=\"cotton\"> cotton</option>\r\n//                                         <option value=\"wool\"> wool</option>\r\n//                                         <option value=\"organisch\"> organisch</option>\r\n//                                         <option value=\"wol\"> wol</option>\r\n//                                         <option value=\"linnen\"> linnen</option>\r\n//\r\n//                                     </select>\r\n//                                 </label>\r\n//\r\n//                                 <label htmlFor=\"FileName\">\r\n//                                                 <textarea\r\n//                                                     id=\"FileName\"\r\n//                                                     /// value={comment}\r\n//                                                     //  onChange={(e) => setComment(e.target.value)}\r\n//                                                     rows=\"5\"\r\n//                                                     cols=\"33\"\r\n//                                                     placeholder=\"vertel ons meer over de item\"\r\n//                                                     value={textarea}\r\n//                                                     onChange={(e) => setTextarea(e.target.value)}\r\n//                                                     validationRules={{\r\n//                                                         required: {\r\n//                                                             value: true,\r\n//                                                             message: 'Dit veld is verplicht',\r\n//                                                         }\r\n//                                                     }}\r\n//                                                     register={register2}\r\n//\r\n//                                                     errors={errors2}\r\n//                                                 />\r\n//                                     {errors2.subject && <p>{errors2.subject.message}</p>}\r\n//                                     {/*{ errors2.textarea && <p>{errors2.textarea.message}</p>}*/}\r\n//\r\n//                                     <button type=\"submit\"> Uploaden</button>\r\n//\r\n//\r\n//                                 </label>\r\n//\r\n//                             </form>\r\n//                         </fieldset>\r\n//                     </div>\r\n//\r\n//                 </label>\r\n//\r\n//\r\n//                 <form onSubmit={handleSubmit(Order)}>\r\n//                     <fieldset>\r\n//\r\n//                         <legend><h2>Reserveren van Items</h2></legend>\r\n//\r\n//\r\n//                         <label htmlFor=\"Items-field\">Item\r\n//                             <select\r\n//                                 name=\"items\"\r\n//                                 id=\"item_id\"\r\n//                                 type=\"list\"\r\n//                                 value={item}\r\n//                                 onChange={(e) => setItem(e.target.value)}\r\n//                             >\r\n//                                 <option value=\"kies \">Wat vind jij leuk? </option>\r\n//                                 {items.map((item) => (\r\n//                                     // return <option value={item.nameInfo}>\r\n//                              <option value={item.nameInfo}>\r\n//                                         {item.nameInfo} - id nr {item.id}\r\n//                                     </option>\r\n//                                 )  )}\r\n//\r\n//\r\n//                             </select>\r\n//                         </label>\r\n//\r\n//                         <label htmlFor=\"date_Info-field\">Date\r\n//                             <input\r\n//                                 name=\"date_Info\"\r\n//                                 id=\"date_Info-field\"\r\n//                                 value={dateInfo}\r\n//                                 onChange={(e) => setDateInfo(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <button id=\"button-box\" className=\"button\" type=\"submit\" onClick={Order}>Verstuur</button>\r\n//                     </fieldset>\r\n//                 </form>\r\n//             </ul>\r\n//\r\n//\r\n//         </p>\r\n//\r\n//     );\r\n// }\r\n//\r\n// export default Account;\r\n//\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState} from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import pic from '../../../../KLEDING_BIEB/src/assets/hilado-en-huso.jpg';\r\n// import Header from \"../../components/header/Header\";\r\n// import axios from \"axios\";\r\n//\r\n//\r\n//\r\n//\r\n// function Contact () {\r\n//     const [username, setUsername] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [comment, setComment] = useState('');\r\n//   //  const [addSucces, toggleAddSucces] = useState(false);\r\n//     const {toggleSuccessAdd} = useState(true);\r\n//      const { register } = useForm( {\r\n//\r\n//\r\n//         username: '',\r\n//         email: '',\r\n//         comments: '',\r\n//         conditions: false,\r\n//     });\r\n//\r\n// //   function handleFormSubmit (data) {\r\n// //       console.log(data);\r\n// //   }\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//     async function addContactUser(e) {\r\n//         e.preventDefault();\r\n//         console.log(username, email, comment);\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8083/users', {\r\n//\r\n//      username: username,\r\n//          email: email,  });\r\n//\r\n//             if (response.status !== 201) {\r\n//                 toggleSuccessAdd(false);\r\n//             }\r\n//             console.log({\r\n//                 email: email,\r\n//                 comment: comment,\r\n//                 username: username,\r\n//             })\r\n//\r\n//         } catch (e) {\r\n//             console.error(e)\r\n//         }\r\n//\r\n//     }\r\n//\r\n//\r\n//\r\n//     return (\r\n//\r\n//         <div className=\"page2\">\r\n//\r\n//             <Header icon={pic}/>\r\n//             <form  onSubmit={addContactUser}>\r\n//\r\n//\r\n//             <fieldset>\r\n//                 <legend><h2>Gegevens</h2></legend>\r\n//\r\n//                 <label  htmlFor=\"details-name\">\r\n//                     Naam :\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"username\"\r\n//                       //  value={username}\r\n//                       //  onChange={(e) => setUsername(e.target.value)}\r\n//                        {...register(\"username\")}\r\n//                     />\r\n//                 </label>\r\n//\r\n//                 <label htmlFor=\"details-email\">\r\n//                     E-mail:\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"email\"\r\n//                        // value={email}\r\n//                        // onChange={(e) => setEmail(e.target.value)}\r\n//\r\n//                        {...register(\"email\")}\r\n//                     />\r\n//                 </label>\r\n//\r\n//             </fieldset>\r\n//\r\n//             <fieldset>\r\n//\r\n//                 <legend><h2>Jouw review</h2></legend>\r\n//\r\n//                 <label htmlFor=\"comments\">\r\n//                     <h3>Opmerkingen:</h3>\r\n//                     <textarea\r\n//\r\n//                         id=\"comments\"\r\n//                        /// value={comment}\r\n//                       //  onChange={(e) => setComment(e.target.value)}\r\n//                         rows=\"10\"\r\n//                         cols=\"60\"\r\n//                         placeholder=\"Laat ons weten wat jij van vindt\"\r\n//\r\n//                      {...register(\"comments\")}\r\n//                     />\r\n//                 </label>\r\n//\r\n//                 <label htmlFor=\"nieuws\">\r\n//\r\n//                     <input\r\n//                         type=\"checkbox\"\r\n//\r\n//                         {...register(\"nieuws\")}\r\n//\r\n//                     />\r\n//                     Ik schrijf me in voor de nieuwe collectie\r\n//\r\n//                 </label>\r\n//\r\n//                 <button type=\"submit\">\r\n//                     Versturen\r\n//                 </button>\r\n//             </fieldset>\r\n//         </form>\r\n//\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default Contact;\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// // //33-54   <form  onSubmit={handleSubmit(handleFormSubmit)}>\r\n// //<form  onSubmit={addUserContact}>\r\n//\r\n// //         const { register, handleSubmit } = useForm({\r\n// //\r\n// //\r\n// //             username: '',\r\n// //             email: '',\r\n// //             comments: '',\r\n// //             conditions: false,\r\n// //         });\r\n//\r\n//\r\n// // async function addUserContact(e) {\r\n// //     e.preventDefault();\r\n// //     console.log(username, email, comment);\r\n// //\r\n// //     try {\r\n// //         const response = await axios.post(`http://localhost:8083/users'),\r\n// // data:{\r\n// //     username: username,\r\n// //         email: email,\r\n// //         textarea: comment,\r\n// // } );\r\n// //         Console.log(response.data);\r\n// //\r\n// //         } catch (e) {\r\n// //         console.error(e);\r\n// //         }\r\n// //\r\n// // }\r\n//\r\n//\r\n"],"mappingsu},"metadata":{},"sourceType":"module","externalDependencies":[]}