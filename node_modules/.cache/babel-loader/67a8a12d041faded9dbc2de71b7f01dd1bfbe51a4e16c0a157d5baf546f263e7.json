{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jftal\\\\WebstormProjects\\\\KLEDING_BIEB\\\\src\\\\pages\\\\subscription\\\\Subscription.js\",\n  _s = $RefreshSig$();\n// import React, {useContext, useState} from \"react\";\n// import {Link, useNavigate} from \"react-router-dom\";\n//\n// import axios from \"axios\";\n// import {AuthContext} from \"../../context/AuthContext\";\n// import pic from '../../../../KLEDING_BIEB/src/assets/cotton.jpg';\n// import Header from \"../../components/header/Header\";\n// import {useForm} from \"react-hook-form\";\n\n////////////////////////////////////////\n\nimport React, { useContext, useEffect, useState } from \"react\";\n//import {Link, useNavigate} from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n//import pic from '../../../../Kleding_Bib/src/assets/cotton.jpg';\nimport Header from \"../../components/header/Header\";\nimport { useForm } from \"react-hook-form\";\nimport jwtDecode from \"jwt-decode\";\nimport Button from \"../../components/button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Subscription() {\n  _s();\n  const {\n    account: {\n      username,\n      password,\n      email\n    },\n    fetchUserData\n  } = useContext(AuthContext);\n\n  //  const url = \"http://localhost:8080\";\n  const jwt = localStorage.getItem(\"token\");\n  const decodedToken = jwtDecode(jwt);\n  decodedToken.sub = undefined;\n  //decodedToken.sub = undefined;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [clicks, setClicks] = useState(0);\n  const [onsubmit, toggleOnSubmit] = useState(true);\n\n  // const refreshPage = () =>{\n  //     setClicks(clicks +1 );\n  //     window.location.reload();}\n\n  useEffect(() => {\n    fetchUserData(jwt, decodedToken.sub);\n  }, [decodedToken.sub, jwt]);\n  const storedToken = localStorage.getItem('token');\n  const onSubmit = async data => {\n    try {\n      await axios.put(`http://localhost:8083/accounts/${username}`, data, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      });\n\n      // refreshPage()\n    } catch (error) {\n      console.error(error);\n      toggleOnSubmit(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Welcome on your profile page.\"\n        // backgroundImage={tarwe}\n        // classname=\"outer-container\"\n        // id=\"top-section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer-container\",\n        id: \"outer-container__profile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-container\",\n          id: \"inner-container__profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"left-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"column-title\",\n              children: \"Your profile settings: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"profile-settings\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 65\n                }, this), \" \", username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"profile-settings\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 65\n                }, this), \" \", password]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"profile-settings\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 65\n                }, this), \" \", email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"inputtTitle\",\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"profile-field\",\n                  id: \"username\",\n                  placeholder: \"username\",\n                  ...register(\"username\", {\n                    required: {\n                      value: true\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-mssg\",\n                  children: \"username is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"inputTitle\",\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"profile-field\",\n                  id: \"password\",\n                  placeholder: \"password\",\n                  ...register(\"password\", {\n                    required: {\n                      value: true\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-mssg\",\n                  children: \"password is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"input-field-title\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"profile-field\",\n                  id: \"email\",\n                  placeholder: \"email\",\n                  ...register(\"email\", {\n                    required: {\n                      value: true,\n                      message: \"Email is required\"\n                    },\n                    pattern: {\n                      value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                      message: \"Invalid email address\"\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-mssg\",\n                  children: errors.email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"button\",\n                  children: \"Update your profile\",\n                  type: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), !onsubmit && /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"warning-msg\",\n                children: \"Something went wrong contact your Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Subscription, \"Oa0nkejY9GqtqLnmte20JAT9C0U=\", false, function () {\n  return [useForm];\n});\n_c = Subscription;\nexport default Subscription;\n\n//\n// function Subscription() {\n//     const {login} = useContext(AuthContext);\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [username, setUsername] = useState('');\n//     const navigate = useNavigate();\n//     //const {handleSubmit, formState: {errors}, subscription} = useForm();\n//     const {toggleSuccessRegister} = useState(true);\n//     const token = localStorage.getItem('token');\n//     // function handleSubmit(e) {\n//     //     e.preventDefault();\n//     //     console.log({\n//     //         email: email,\n//     //         password: password,\n//     //          username: username,\n//     //     })\n//\n//\n//     async function registerUser(e) {\n//         e.preventDefault()\n//         console.log(email, password, username)\n//         try {\n//             const response = await axios.post('http://localhost:8083/users', {\n//                 email: email,\n//                 password: password,\n//                 username: username,\n//             })\n//             if (response.status !== 201) {\n//                 toggleSuccessRegister(false);\n//             }\n//             console.log(response)\n//            // login(email);\n//             navigate('/Account');\n//\n//\n//         }  catch (e) {\n//                 console.error(e)\n//             }\n//\n//         }\n//\n//\n//         return (\n//\n//\n//             <p className=\"page2\">\n//\n//\n//                 <Header icon={pic}/>\n//\n//\n//                 <ul className=\"form-xtra\">\n//\n//\n//\n//                     <form onSubmit={registerUser}>\n//\n//                         <fieldset>\n//                        <legend> <h1>Registreren</h1></legend>\n//\n//                             <label htmlFor=\"details-email\">\n//                             E-mailadres :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"email\"\n//                                 value={email}\n//                                 onChange={(e) => setEmail(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <label htmlFor=\"details-wachtwoord\">\n//                             Wachtwoord :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"password\"\n//                                 value={password}\n//                                 onChange={(e) => setPassword(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <label htmlFor=\"details-gebruikersnaam\">\n//                             Gebruikersnaam :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"username\"\n//                                 value={username}\n//                                 onChange={(e) => setUsername(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <button type=\"submit\">Registreren</button>\n//\n//                     </fieldset>\n//                     </form>\n//\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\n//\n//\n//                 </ul>\n//\n//             </p>\n//        );\n//\n// }\n//\n// export default Subscription;\n\n//\n//\n// function Subscription() {\n//     const {subscription} = useContext(AuthContext);\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [username, setUsername] = useState('');\n//     const navigate = useNavigate();\n//     const {toggleSuccessRegister} = useState(true);\n//     const token = localStorage.getItem('token');\n//   //  const { formState: { errors }} = useForm();\n//     const [errors, toggleErrors] = useState(false);\n//\n//\n//     async function registerUser(e) {\n//         e.preventDefault()\n//         console.log(email, password, username)\n//         try {\n//             const response = await axios.post('http://localhost:8083/users', {\n//                 email: email,\n//                 password: password,\n//                 username: username,\n//             })\n//             if (response.status !== 201) {\n//                 toggleSuccessRegister(false);\n//             }\n//             console.log(response)\n//            //login(email);\n//          //navigate('/Account');\n//         } catch (e) {\n//             console.error(e)\n//           //  navigate('/Subscription');\n//         }\n//\n//     }\n//\n//\n//         return (\n//\n//\n//             <p className=\"page2\">\n//                 <Header icon={pic}/>\n//\n//\n//                 <ul className=\"form-xtra\">\n//\n//                     <form onSubmit={registerUser}>\n//\n//\n//                         <fieldset>\n//                             <legend> <h1>Registreren</h1></legend>\n//\n//                         <label htmlFor=\"details-email\">\n//                             E-mailadres :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"email\"\n//                                 value={email}\n//                                 onChange={(e) => setEmail(e.target.value)}\n//                                 placeholder=\"email\"\n//                                 validationRules={{\n//                                     required: {\n//                                         value: true,\n//                                         message: 'Dit veld is verplicht',\n//                                     }\n//                                 }}\n//                             />\n//                             {errors.email && (\n//                                 <p className=\"error_mssg\">{errors.email.message}</p>\n//                             )}\n//                         </label>\n//\n//\n//\n//\n//                         <label htmlFor=\"details-wachtwoord\">\n//                             Wachtwoord :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"password\"\n//                                 value={password}\n//                                 onChange={(e) => setPassword(e.target.value)}\n//                                 placeholder=\"password\"\n//                                 validationRules={{\n//                                     required: {\n//                                         value: true,\n//                                         message: 'Dit veld is verplicht',\n//                                     }\n//                                 }}\n//\n//\n//                             />\n//\n//                             {errors.password && (\n//                                 <p className=\"error_mssg\">{errors.password.message}</p>\n//                                 )}\n//                         </label>\n//\n//\n//\n//                         <label htmlFor=\"details-gebruikersnaam\">\n//                             Gebruikersnaam :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"username\"\n//                                 value={username}\n//                                 onChange={(e) => setUsername(e.target.value)}\n//                                 placeholder=\"username\"\n//                                 validationRules={{\n//                                     required: {\n//                                         value: true,\n//                                         message: 'Dit veld is verplicht',\n//                                     }\n//                                 }}\n//                             />\n//\n//                             {errors.username && (\n//                                 <p className=\"error_mssg\">{errors.username.message}</p>\n//                             )}\n//                         </label>\n//\n//\n//                             {errors && <p className=\"error-msg\">Registratie mislukt !!\n//                                 Alle velden invullen</p>}\n//\n//                         <button type=\"submit\">Registreren</button>\n//                         </fieldset>\n//                     </form>\n//\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\n//\n//\n//                 </ul>\n//\n//             </p>\n//\n//\n//         );\n//\n//\n//\n// }\n//\n// export default Subscription;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////\nvar _c;\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","AuthContext","Header","useForm","jwtDecode","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Subscription","_s","account","username","password","email","fetchUserData","jwt","localStorage","getItem","decodedToken","sub","undefined","register","handleSubmit","formState","errors","clicks","setClicks","onsubmit","toggleOnSubmit","storedToken","onSubmit","data","put","headers","Authorization","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","id","htmlFor","type","placeholder","required","value","message","pattern","_c","$RefreshReg$"],"sources":["C:/Users/jftal/WebstormProjects/KLEDING_BIEB/src/pages/subscription/Subscription.js"],"sourcesContent":["\r\n// import React, {useContext, useState} from \"react\";\r\n// import {Link, useNavigate} from \"react-router-dom\";\r\n//\r\n// import axios from \"axios\";\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n// import pic from '../../../../KLEDING_BIEB/src/assets/cotton.jpg';\r\n// import Header from \"../../components/header/Header\";\r\n// import {useForm} from \"react-hook-form\";\r\n\r\n////////////////////////////////////////\r\n\r\n\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\n//import {Link, useNavigate} from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\n//import pic from '../../../../Kleding_Bib/src/assets/cotton.jpg';\r\nimport Header from \"../../components/header/Header\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\n\r\n\r\nfunction Subscription() {\r\n\r\n    const {\r\n        account: {username, password, email},\r\n        fetchUserData } = useContext(AuthContext);\r\n\r\n    //  const url = \"http://localhost:8080\";\r\n    const jwt = localStorage.getItem(\"token\")\r\n    const decodedToken = jwtDecode(jwt);\r\n    decodedToken.sub = undefined;\r\n    //decodedToken.sub = undefined;\r\n    const {register, handleSubmit, formState: { errors }} = useForm();\r\n    const [clicks, setClicks]= useState(0);\r\n    const [onsubmit, toggleOnSubmit] = useState(true)\r\n\r\n    // const refreshPage = () =>{\r\n    //     setClicks(clicks +1 );\r\n    //     window.location.reload();}\r\n\r\n    useEffect(() => {\r\n        fetchUserData(jwt, decodedToken.sub)\r\n    }, [decodedToken.sub, jwt])\r\n\r\n\r\n    const storedToken = localStorage.getItem( 'token' )\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            await axios.put(`http://localhost:8083/accounts/${username}`, data, {\r\n                headers: {Authorization: `Bearer ${storedToken}`}})\r\n\r\n            // refreshPage()\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            toggleOnSubmit(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n\r\n                <Header\r\n                    title=\"Welcome on your profile page.\"\r\n                    // backgroundImage={tarwe}\r\n                    // classname=\"outer-container\"\r\n                    // id=\"top-section\"\r\n                />\r\n                <div className=\"outer-container\" id=\"outer-container__profile\">\r\n                    <div className=\"inner-container\" id=\"inner-container__profile\">\r\n\r\n                        <section className=\"left-column\">\r\n                            <h2 className=\"column-title\">Your profile settings: </h2>\r\n                            <span>\r\n                                <p className=\"profile-settings\"><strong>username:</strong> {username}</p>\r\n                                <p className=\"profile-settings\"><strong>password:</strong> {password}</p>\r\n                                <p className=\"profile-settings\"><strong>Email:</strong> {email}</p>\r\n                            </span>\r\n                        </section>\r\n\r\n\r\n\r\n                        <section className=\"column\">\r\n                            {/*// <h2 className=\"column-title\">Change profile settings:</h2>*/}\r\n                            <form onSubmit={handleSubmit(onSubmit)} >\r\n\r\n                                <label htmlFor=\"username\">\r\n                                    <strong className=\"inputtTitle\">Username:</strong>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"profile-field\"\r\n                                        id=\"username\"\r\n                                        placeholder=\"username\"\r\n\r\n                                        {...register(\"username\", {\r\n                                            required: {\r\n                                                value: true\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                    {errors.username && <p className=\"error-mssg\">username is required</p>}\r\n                                </label>\r\n\r\n                                <label htmlFor=\"password\">\r\n                                    <strong className=\"inputTitle\">Password:</strong>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"profile-field\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"password\"\r\n\r\n                                        {...register(\"password\", {\r\n                                            required: {\r\n                                                value: true\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                    {errors.password && <p className=\"error-mssg\">password is required</p>}\r\n                                </label>\r\n\r\n\r\n\r\n                                <label htmlFor=\"email-field\">\r\n                                    <strong className=\"input-field-title\">Email:</strong>:\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"profile-field\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"email\"\r\n                                        {...register(\"email\", {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Email is required\"\r\n                                            },\r\n                                            pattern: {\r\n                                                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                                message: \"Invalid email address\"\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                    {errors.email && (\r\n                                        <p className=\"error-mssg\">{errors.email.message}</p>\r\n                                    )}\r\n                                </label>\r\n\r\n                                <div className=\"button\">\r\n                                    {<Button className=\"button\"\r\n                                             children=\"Update your profile\"\r\n                                             type=\"submit\"\r\n                                    />}\r\n                                </div>\r\n\r\n                                {!onsubmit &&\r\n                                    <h2 className=\"warning-msg\">Something went wrong contact your Admin</h2>}\r\n\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                />\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Subscription;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n// function Subscription() {\r\n//     const {login} = useContext(AuthContext);\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [username, setUsername] = useState('');\r\n//     const navigate = useNavigate();\r\n//     //const {handleSubmit, formState: {errors}, subscription} = useForm();\r\n//     const {toggleSuccessRegister} = useState(true);\r\n//     const token = localStorage.getItem('token');\r\n//     // function handleSubmit(e) {\r\n//     //     e.preventDefault();\r\n//     //     console.log({\r\n//     //         email: email,\r\n//     //         password: password,\r\n//     //          username: username,\r\n//     //     })\r\n//\r\n//\r\n//     async function registerUser(e) {\r\n//         e.preventDefault()\r\n//         console.log(email, password, username)\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8083/users', {\r\n//                 email: email,\r\n//                 password: password,\r\n//                 username: username,\r\n//             })\r\n//             if (response.status !== 201) {\r\n//                 toggleSuccessRegister(false);\r\n//             }\r\n//             console.log(response)\r\n//            // login(email);\r\n//             navigate('/Account');\r\n//\r\n//\r\n//         }  catch (e) {\r\n//                 console.error(e)\r\n//             }\r\n//\r\n//         }\r\n//\r\n//\r\n//         return (\r\n//\r\n//\r\n//             <p className=\"page2\">\r\n//\r\n//\r\n//                 <Header icon={pic}/>\r\n//\r\n//\r\n//                 <ul className=\"form-xtra\">\r\n//\r\n//\r\n//\r\n//                     <form onSubmit={registerUser}>\r\n//\r\n//                         <fieldset>\r\n//                        <legend> <h1>Registreren</h1></legend>\r\n//\r\n//                             <label htmlFor=\"details-email\">\r\n//                             E-mailadres :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"email\"\r\n//                                 value={email}\r\n//                                 onChange={(e) => setEmail(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <label htmlFor=\"details-wachtwoord\">\r\n//                             Wachtwoord :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"password\"\r\n//                                 value={password}\r\n//                                 onChange={(e) => setPassword(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <label htmlFor=\"details-gebruikersnaam\">\r\n//                             Gebruikersnaam :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"username\"\r\n//                                 value={username}\r\n//                                 onChange={(e) => setUsername(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <button type=\"submit\">Registreren</button>\r\n//\r\n//                     </fieldset>\r\n//                     </form>\r\n//\r\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\r\n//\r\n//\r\n//                 </ul>\r\n//\r\n//             </p>\r\n//        );\r\n//\r\n// }\r\n//\r\n// export default Subscription;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n// function Subscription() {\r\n//     const {subscription} = useContext(AuthContext);\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [username, setUsername] = useState('');\r\n//     const navigate = useNavigate();\r\n//     const {toggleSuccessRegister} = useState(true);\r\n//     const token = localStorage.getItem('token');\r\n//   //  const { formState: { errors }} = useForm();\r\n//     const [errors, toggleErrors] = useState(false);\r\n//\r\n//\r\n//     async function registerUser(e) {\r\n//         e.preventDefault()\r\n//         console.log(email, password, username)\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8083/users', {\r\n//                 email: email,\r\n//                 password: password,\r\n//                 username: username,\r\n//             })\r\n//             if (response.status !== 201) {\r\n//                 toggleSuccessRegister(false);\r\n//             }\r\n//             console.log(response)\r\n//            //login(email);\r\n//          //navigate('/Account');\r\n//         } catch (e) {\r\n//             console.error(e)\r\n//           //  navigate('/Subscription');\r\n//         }\r\n//\r\n//     }\r\n//\r\n//\r\n//         return (\r\n//\r\n//\r\n//             <p className=\"page2\">\r\n//                 <Header icon={pic}/>\r\n//\r\n//\r\n//                 <ul className=\"form-xtra\">\r\n//\r\n//                     <form onSubmit={registerUser}>\r\n//\r\n//\r\n//                         <fieldset>\r\n//                             <legend> <h1>Registreren</h1></legend>\r\n//\r\n//                         <label htmlFor=\"details-email\">\r\n//                             E-mailadres :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"email\"\r\n//                                 value={email}\r\n//                                 onChange={(e) => setEmail(e.target.value)}\r\n//                                 placeholder=\"email\"\r\n//                                 validationRules={{\r\n//                                     required: {\r\n//                                         value: true,\r\n//                                         message: 'Dit veld is verplicht',\r\n//                                     }\r\n//                                 }}\r\n//                             />\r\n//                             {errors.email && (\r\n//                                 <p className=\"error_mssg\">{errors.email.message}</p>\r\n//                             )}\r\n//                         </label>\r\n//\r\n//\r\n//\r\n//\r\n//                         <label htmlFor=\"details-wachtwoord\">\r\n//                             Wachtwoord :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"password\"\r\n//                                 value={password}\r\n//                                 onChange={(e) => setPassword(e.target.value)}\r\n//                                 placeholder=\"password\"\r\n//                                 validationRules={{\r\n//                                     required: {\r\n//                                         value: true,\r\n//                                         message: 'Dit veld is verplicht',\r\n//                                     }\r\n//                                 }}\r\n//\r\n//\r\n//                             />\r\n//\r\n//                             {errors.password && (\r\n//                                 <p className=\"error_mssg\">{errors.password.message}</p>\r\n//                                 )}\r\n//                         </label>\r\n//\r\n//\r\n//\r\n//                         <label htmlFor=\"details-gebruikersnaam\">\r\n//                             Gebruikersnaam :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"username\"\r\n//                                 value={username}\r\n//                                 onChange={(e) => setUsername(e.target.value)}\r\n//                                 placeholder=\"username\"\r\n//                                 validationRules={{\r\n//                                     required: {\r\n//                                         value: true,\r\n//                                         message: 'Dit veld is verplicht',\r\n//                                     }\r\n//                                 }}\r\n//                             />\r\n//\r\n//                             {errors.username && (\r\n//                                 <p className=\"error_mssg\">{errors.username.message}</p>\r\n//                             )}\r\n//                         </label>\r\n//\r\n//\r\n//                             {errors && <p className=\"error-msg\">Registratie mislukt !!\r\n//                                 Alle velden invullen</p>}\r\n//\r\n//                         <button type=\"submit\">Registreren</button>\r\n//                         </fieldset>\r\n//                     </form>\r\n//\r\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\r\n//\r\n//\r\n//                 </ul>\r\n//\r\n//             </p>\r\n//\r\n//\r\n//         );\r\n//\r\n//\r\n//\r\n// }\r\n//\r\n// export default Subscription;\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}