{"ast":null,"code":"\n\n//\n// import {Link, useNavigate} from 'react-router-dom';\n// import {AuthContext} from '../../context/AuthContext';\n// import React, {useContext, useState} from 'react';\n//\n// import axios from \"axios\";\n// import silk from \"../../assets/silk.jpg\";\n// import Main from \"../../components/main/Main\";\n// import Footer from \"../../components/footer/Footer\";\n// import Button from \"../../components/button/Button\";\n// import './Login.css';\n//\n//\n//\n// function Login() {\n//\n//     const {login} = useContext(AuthContext);\n//     const [username, setUsername] = useState( \"\");\n//     const [password, setPassword] = useState(\"\");\n//     const navigate = useNavigate();\n//     const [error, toggleError] = useState(false);\n//     const [loading, toggleLoading] = useState(false);\n//\n//\n//     async function handleSubmit(e) {\n//         e.preventDefault();\n//         console.log(username, password)\n//         toggleError(false);\n//         toggleLoading(true);\n//\n//\n//         try {\n//             const response = await axios.post('http://localhost:8083/authenticate', {\n//                 username: username,\n//                     password: password\n//             }\n//              );\n//\n//             console.log('test: ', response);\n//            navigate('/Account');\n//             login(response.data.jwt);\n//         } catch ( e ) {\n//             if (axios.isCancel(e)) {\n//                 console.log(' request was cancelled')\n//             } else {\n//                 console.error(e)\n//                 toggleError(true);\n//             }\n//             toggleLoading(false);\n//         }\n//     }\n//\n//\n//\n//\n//\n//     return (\n//\n// <>\n//     {loading && <p>Loading...</p>}\n//\n//\n//     <Main className=\"outer-container-login\">\n//         <div className=\"inner-container-login\">\n//         <div className=\"silk-1\">\n//             <img src={silk}/>\n//\n//\n//\n//               <form className=\"form-xtra\"\n//                      onSubmit={handleSubmit}>\n//\n//\n//\n//                <fieldset>\n//                 <legend>Inloggen</legend>\n//\n//\n//                 <label htmlFor=\"username\">\n//                     <input id=\"username\"\n//                            value={username}\n//                            onChange={(e) => setUsername(e.target.value)}\n//                            name=\"username\"\n//                            placeholder=\"username\"/>\n//                 </label>\n//\n//                 <label htmlFor=\"pass\">\n//                     <input id=\"pass\"\n//                            value={password}\n//                            onChange={(e) => setPassword(e.target.value)}\n//                            name=\"password\"\n//                            placeholder=\"password\"/>\n//                 </label>\n//\n//                 {error && <p className=\"error-msg\">Inloggen mislukt !!\n//                     Gebruikersnaam of wachtwoord onjuist</p>}\n//\n//\n//                 <Button type=\"submit\">\n//                     Inloggen\n//                 </Button>\n//\n//                    <p>Nog geen account? <Link to=\"/Subscription\">Registreer</Link> je dan eerst.</p>\n//\n//\n//                </fieldset>\n//\n//\n//             </form>\n//\n//         </div>\n//         </div>\n// </Main>\n//\n//\n//            <Footer description=\"Copyright © 2023 LaBruja. Alle rechten voorbehouden.\"\n//                />\n//\n// </>\n//\n//     );\n//\n// }\n//\n// export default Login;\n//","map":{"version":3,"names":[],"sources":["C:/Users/jftal/WebstormProjects/Fronted_Klending_bieb1/src/pages/login/Login.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n// import {Link, useNavigate} from 'react-router-dom';\r\n// import {AuthContext} from '../../context/AuthContext';\r\n// import React, {useContext, useState} from 'react';\r\n//\r\n// import axios from \"axios\";\r\n// import silk from \"../../assets/silk.jpg\";\r\n// import Main from \"../../components/main/Main\";\r\n// import Footer from \"../../components/footer/Footer\";\r\n// import Button from \"../../components/button/Button\";\r\n// import './Login.css';\r\n//\r\n//\r\n//\r\n// function Login() {\r\n//\r\n//     const {login} = useContext(AuthContext);\r\n//     const [username, setUsername] = useState( \"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n//     const [error, toggleError] = useState(false);\r\n//     const [loading, toggleLoading] = useState(false);\r\n//\r\n//\r\n//     async function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         console.log(username, password)\r\n//         toggleError(false);\r\n//         toggleLoading(true);\r\n//\r\n//\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8083/authenticate', {\r\n//                 username: username,\r\n//                     password: password\r\n//             }\r\n//              );\r\n//\r\n//             console.log('test: ', response);\r\n//            navigate('/Account');\r\n//             login(response.data.jwt);\r\n//         } catch ( e ) {\r\n//             if (axios.isCancel(e)) {\r\n//                 console.log(' request was cancelled')\r\n//             } else {\r\n//                 console.error(e)\r\n//                 toggleError(true);\r\n//             }\r\n//             toggleLoading(false);\r\n//         }\r\n//     }\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//     return (\r\n//\r\n// <>\r\n//     {loading && <p>Loading...</p>}\r\n//\r\n//\r\n//     <Main className=\"outer-container-login\">\r\n//         <div className=\"inner-container-login\">\r\n//         <div className=\"silk-1\">\r\n//             <img src={silk}/>\r\n//\r\n//\r\n//\r\n//               <form className=\"form-xtra\"\r\n//                      onSubmit={handleSubmit}>\r\n//\r\n//\r\n//\r\n//                <fieldset>\r\n//                 <legend>Inloggen</legend>\r\n//\r\n//\r\n//                 <label htmlFor=\"username\">\r\n//                     <input id=\"username\"\r\n//                            value={username}\r\n//                            onChange={(e) => setUsername(e.target.value)}\r\n//                            name=\"username\"\r\n//                            placeholder=\"username\"/>\r\n//                 </label>\r\n//\r\n//                 <label htmlFor=\"pass\">\r\n//                     <input id=\"pass\"\r\n//                            value={password}\r\n//                            onChange={(e) => setPassword(e.target.value)}\r\n//                            name=\"password\"\r\n//                            placeholder=\"password\"/>\r\n//                 </label>\r\n//\r\n//                 {error && <p className=\"error-msg\">Inloggen mislukt !!\r\n//                     Gebruikersnaam of wachtwoord onjuist</p>}\r\n//\r\n//\r\n//                 <Button type=\"submit\">\r\n//                     Inloggen\r\n//                 </Button>\r\n//\r\n//                    <p>Nog geen account? <Link to=\"/Subscription\">Registreer</Link> je dan eerst.</p>\r\n//\r\n//\r\n//                </fieldset>\r\n//\r\n//\r\n//             </form>\r\n//\r\n//         </div>\r\n//         </div>\r\n// </Main>\r\n//\r\n//\r\n//            <Footer description=\"Copyright © 2023 LaBruja. Alle rechten voorbehouden.\"\r\n//                />\r\n//\r\n// </>\r\n//\r\n//     );\r\n//\r\n// }\r\n//\r\n// export default Login;\r\n//\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}