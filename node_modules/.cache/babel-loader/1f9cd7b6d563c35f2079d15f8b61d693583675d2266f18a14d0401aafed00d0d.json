{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jftal\\\\WebstormProjects\\\\KLEDING_BIEB\\\\src\\\\pages\\\\admin\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport Header from '../../components/header/Header';\nimport './Admin.css';\nimport bib from \"../../assets/Mar_Bib.jpg\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport './Admin.css';\nimport axios from \"axios\";\nimport Input from \"../../components/input/Input\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"../../components/button/Button\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Subscription } from \"../subscription/Subscription\";\nimport { AuthContext } from \"../../context/AuthContext\";\n//import pic from \"../../assets/hilado-en-huso.jpg\";\n\n// class Admin extends React.Component {\n//     render() {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const [error, toggleError] = useState(false);\n  const [loading, toggleLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [singleUser, setSingleUser] = useState('');\n  const [toDelete, setToDelete] = useState([]);\n  const [items, setItems] = useState([]);\n  //  const [deleteThisItem, toggleDeleteThisItem] = useState(false);\n  //  const [singleItem, setSingleItem] = useState('');\n  //  const [item_id, setItem_id] = useState(0);\n  //  const [nameInfo, setNameInfo] = useState(\"\");\n\n  const [idToDelete, setIdToDelete] = useState(\"\");\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionsList, setSubscriptionsList] = useState([]);\n\n  // const [userInfo, setUserInfo] = useState(\"\");\n\n  const [expirationDate, setExpirationDate] = useState(\"\");\n  const [subscriptionStatus, setSubscriptionStatus] = useState(\"\");\n  const [typeSubscription, setTypeSubscription] = useState(\"\");\n  const [patchThisSubscription, togglePatchThisSubscription] = useState(false);\n  const [subscriptionIdToPatch, setSubscriptionIdToPatch] = useState(\"\");\n\n  // const { handleSubmit, formState: { errors4 } } = useForm();\n  const [accounts, setAccounts] = useState([]);\n  const [accountsList, setAccountsList] = useState('');\n  const [orders, setOrders] = useState('');\n  const [ordersList, setOrdersList] = useState('');\n  const [patchThisOrder, togglePatchThisOrder] = useState(false);\n  const [orderIdToPatch, setOrderIdToPatch] = useState(\"\");\n\n  //patch user\n  const {\n    register,\n    handleSubmit: handleSubmit1,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [patchThisUser, togglePatchThisUser] = useState(false);\n  const [userIdToPatch, setUserIdToPatch] = useState(\"\");\n  const {\n    isAuth,\n    user\n  } = useContext(AuthContext);\n  const [admin, toggleAdmin] = useState(false);\n  const [clicks, setClicks] = useState(0);\n  //mail\n\n  const [userIdToEmail, setUserIdToEmail] = useState(\"\");\n  const [succesSendMail, toggleSuccesSendMail] = useState(false);\n  const {\n    register: register2,\n    formState: {\n      errors: errors2\n    },\n    handleSubmit: handleSubmit2,\n    reset\n  } = useForm();\n  const {\n    register: register3,\n    handleSubmit: handleSubmit3,\n    reset: resetForm3,\n    formState: {\n      errors: errors3\n    }\n  } = useForm();\n  const {\n    register: register4,\n    handleSubmit: handleSubmit4,\n    reset: resetForm4,\n    formState: {\n      errors: errors4\n    }\n  } = useForm();\n  const {\n    register: register5,\n    handleSubmit: handleSubmit5,\n    reset: resetForm5,\n    formState: {\n      errors: errors5\n    }\n  } = useForm();\n  const {\n    register: register6,\n    handleSubmit: handleSubmit6,\n    reset: resetForm6,\n    formState: {\n      errors: errors6\n    }\n  } = useForm();\n  const {\n    register: register7,\n    handleSubmit: handleSubmit7,\n    reset: resetForm7,\n    formState: {\n      errors: errors7\n    }\n  } = useForm();\n  const {\n    register: register8,\n    handleSubmit: handleSubmit8,\n    reset: resetForm8,\n    formState: {\n      errors: errors8\n    }\n  } = useForm();\n  const resetFormFields = () => {\n    setSingleUser(\"\"); // Clear the selected user value\n    setToDelete([]); // Clear the selected item value\n    setUserIdToPatch(\"\"); // Clear the user id value for user patch\n    setUserIdToEmail(\"\"); // Clear the user id value for sending email\n    toggleSuccesSendMail(false); // Reset email success state\n    togglePatchThisUser(false); // Reset user patch state\n    setSubscriptions([]);\n    resetForm3();\n    resetForm4();\n    resetForm5();\n    resetForm6();\n    resetForm7();\n    resetForm8();\n  };\n\n  // to get all users//////////////////////////////////////////////////////////////////////////////////////\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchUsers() {\n      // toggleDeleteUser(false);\n      togglePatchThisUser(false);\n      try {\n        const response = await axios.get('http://localhost:8083/users', {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        navigate('/Admin');\n        setUsers(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchUsers();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  // to delete user//////////////////////////////////////////////////////////////////////////////////////////\n\n  async function deleteUserFunction(e, username) {\n    e.preventDefault();\n    toggleError(false);\n    toggleLoading(true);\n    console.log(username.toLowerCase());\n    try {\n      const response = await axios.delete(`http://localhost:8083/users/${username.toLowerCase()}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      console.log(response);\n      resetFormFields();\n      navigate(\"/Account\");\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  /////  to get all items  ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchItems() {\n      // toggleDeleteThisItem(false);\n      try {\n        const response = await axios.get('http://localhost:8083/items', {\n          // item_id: item_id,\n          // name_Info: nameInfo,\n          // user_username: user_username,\n\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        navigate('/Admin');\n        setItems(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchItems();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  /////to delete item///////////////////////////////////////////////////////////////////////////////////////////\n\n  async function deleteItemFunction(e, idToDelete) {\n    e.preventDefault(idToDelete);\n    toggleError(false);\n    toggleLoading(true);\n    console.log();\n    try {\n      const response = await axios.delete(`http://localhost:8083/items/${idToDelete}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n        // signal: controller.signal,\n      });\n\n      // setItems(response.data);\n      console.log(response);\n      setIdToDelete(response.data);\n      resetFormFields();\n      navigate(\"/Account\");\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n  // /////////////////////////////////////////////////////////////////\n  //\n  //     useEffect(() => {\n  //\n  //         const controller = new AbortController();\n  //         async function fetchOrders() {\n  //             //  togglePatchThisAccount(false);\n  //             try {\n  //                 const response = await axios.get('http://localhost:8083/orders', {\n  //\n  //\n  //                     headers: {\n  //                         \"Content-Type\": \"application/json\",\n  //                         \"Authorization\": `Bearer ${token}`,\n  //                     },\n  //                     signal: controller.signal,\n  //                 });\n  //\n  //                 setOrders(response.data);\n  //                 navigate('/Admin');\n  //                 // setSubscriptionsList(response.data);\n  //             } catch (e) {\n  //                 console.error(e);\n  //             }\n  //         }\n  //\n  //         void fetchOrders();\n  //         return function cleanup() {\n  //             controller.abort();\n  //         }\n  //     }, []);\n\n  /////  to get all accounts info ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchAccounts() {\n      //  togglePatchThisAccount(false);\n      try {\n        const response = await axios.get('http://localhost:8083/accounts', {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        setAccounts(response.data);\n        navigate('/Admin');\n        // setSubscriptionsList(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchAccounts();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  /////  to get all subscriptions info ////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchSubscriptions() {\n      togglePatchThisSubscription(false);\n      try {\n        const response = await axios.get('http://localhost:8083/subscriptions', {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          },\n          signal: controller.signal\n        });\n        setSubscriptions(response.data);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    void fetchSubscriptions();\n    return function cleanup() {\n      controller.abort();\n    };\n  }, []);\n\n  /////// Change info bij subscriptions /////////////////////////////////////////\n\n  async function patchSubscription(data) {\n    // e.preventDefault();\n    toggleError(false);\n    toggleLoading(true);\n    try {\n      const response = await axios.patch(`http://localhost:8083/subscriptions/${subscriptionIdToPatch}`, data, {\n        expirationDate: expirationDate,\n        subscriptionStatus: subscriptionStatus,\n        typeSubscription: typeSubscription,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      togglePatchThisSubscription(true);\n      console.log('Subscription updated:', response.data);\n      resetFormFields();\n      navigate(\"/Account\");\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  /////// Change info bij users /////////////////////////////////////////\n  async function patchUser(data) {\n    toggleError(false);\n    toggleLoading(true);\n    try {\n      const response = await axios.patch(`http://localhost:8083/users/${userIdToPatch}`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      togglePatchThisUser(true);\n      console.log(response);\n      resetFormFields();\n      navigate(\"/Account\");\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  // //to send mail//////////////////////////////////////////////////////////////////////////////////\n  function emailUserFunction(data) {\n    data.recipient = userIdToEmail;\n    void sendMail(data);\n  }\n  async function sendMail(data) {\n    try {\n      const response = await axios.post('http://localhost:8083/sendMail', {\n        data\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        toggleSuccesSendMail(true);\n      }\n      console.log(\"Response adminpage\");\n      console.log(response.status);\n      resetFormFields();\n      navigate(\"/Admin\");\n    } catch (e) {\n      console.error(e);\n      toggleError(true);\n    }\n    toggleLoading(true);\n  }\n\n  // return//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"page\",\n    children: [isAuth && user.authority === \"ROLE_USER\" && !admin && /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"page\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Sorry, go back to your\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Account\",\n          children: \" account \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 71\n        }, this), \" \\uD83D\\uDE35\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Only for Administrators \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }, this), isAuth && user.authority === \"ROLE_ADMIN\" && !admin && /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"page2\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"margin-top2\",\n            children: \"Lijst van accounts en opmerkingen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"accounts\",\n          id: \"userInfo\",\n          type: \"list\",\n          value: accountsList,\n          onChange: e => setAccountsList(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"selecteer een username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }, this), accounts.map(list => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: list.userInfo,\n              children: [list.userInfo, \" - \", list.email, \" -\", list.comment]\n            }, list.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"margin-top2\",\n            children: \"Lijst van orders \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"orders\",\n          id: \"itemInfo\",\n          type: \"list\",\n          value: ordersList,\n          onChange: e => setOrdersList(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"selecteer een order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 29\n          }, this), orders.map(list => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: list.itemInfo,\n              children: [list.itemInfo, \"/\", list.id]\n            }, list.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"margin-top5\",\n          onSubmit: handleSubmit5(patchOrder),\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            labelText: \"itemInfo\",\n            type: \"text\",\n            name: \"itemInfo\",\n            className: \"input_text\",\n            register: register5,\n            errors: errors5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            labelText: \"dateInfo\",\n            type: \"date\",\n            name: \"dateInfo\",\n            className: \"input_text\",\n            register: register8,\n            errors: errors8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"button-ellips\",\n            children: \"Aanpassen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, this)]\n        }, 5, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"margin-top2\",\n              children: \"Lijst en aanpassen van subscriptions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"subscription-change\",\n            onChange: e => setSubscriptionIdToPatch(e.currentTarget.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"selecteer subscription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 33\n            }, this), subscriptions.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: list.id,\n              children: [list.typeSubscription, \"- \", list.subscriptionStatus, \"-\", list.expirationDate, \"-id nr:\", list.subscriptionId]\n            }, list.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"margin-top3\",\n            onSubmit: handleSubmit3(patchSubscription),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"typeSubscription\",\n              type: \"text\",\n              name: \"typeSubscription\",\n              className: \"input_text\",\n              register: register5,\n              errors: errors5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"expirationDate\",\n              type: \"date\",\n              name: \"expirationDate\",\n              className: \"input_text\",\n              register: register6,\n              errors: errors6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"subscriptionStatus\",\n              type: \"text\",\n              name: \"subscriptionStatus\",\n              className: \"input_text\",\n              register: register6,\n              errors: errors6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"button-ellips\",\n              children: \"Aanpassen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 33\n            }, this), patchThisSubscription && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"margin-top1\",\n              children: \"De subscription is gewijzigd.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 37\n            }, this)]\n          }, 3, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"margin-top2\",\n              children: \"Aanpassen van user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"user-change\",\n            onChange: e => setUserIdToPatch(e.currentTarget.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"selecteer een username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 33\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: user.username\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"margin-top2\",\n            onSubmit: handleSubmit1(patchUser),\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"wachtwoord\",\n              type: \"text\",\n              name: \"password\",\n              className: \"input_text\",\n              register: register3,\n              errors: errors3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              labelText: \"username\",\n              type: \"text\",\n              name: \"username\",\n              className: \"input_text\",\n              register: register4,\n              errors: errors4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"button-ellips\",\n              children: \"versturen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 33\n            }, this), patchThisUser && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"margin-top1\",\n              children: \"De user is gewijzigd.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 37\n            }, this)]\n          }, 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"margin-top2\",\n            children: \"Lijst van users \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"users\",\n          id: \"username\",\n          type: \"list\",\n          value: singleUser,\n          onChange: e => setSingleUser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"selecteer een username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 29\n          }, this), users.map(user => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: [user.email, \" - \", user.nameInfo, \" -\", user.username]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"button-box\",\n          className: \"button\",\n          type: \"submit\",\n          onClick: e => deleteUserFunction(e, singleUser),\n          children: \"Verwijderen van User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"margin-top2\",\n            children: \"Lijst van items \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"items\",\n          id: \"tags\",\n          type: \"list\",\n          value: toDelete,\n          onChange: e => setToDelete(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"selecteer een item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 29\n          }, this), items.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.id,\n              children: [\" \", item.tags, \"-\", item.nameInfo, \"--item id/\", item.id]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"button-box\",\n          className: \"button\",\n          type: \"submit\",\n          onClick: e => deleteItemFunction(e, toDelete),\n          children: \"Verwijderen van Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"margin-top2\",\n              children: \"Bericht versturen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit2(emailUserFunction),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"margin-bottom2\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"recipient\",\n                children: [\"Email naar:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"text_select\",\n                  onChange: e => setUserIdToEmail(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"selecteer een emailadres\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 45\n                  }, this), users.map(user => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: user.email\n                    }, user.username, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"subject\",\n              labelText: \"Onderwerp:\",\n              type: \"text\",\n              name: \"subject\",\n              className: \"input_text\",\n              placeholder: \"onderwerp\",\n              validationRules: {\n                required: {\n                  value: true,\n                  message: 'Dit veld is verplicht'\n                }\n              },\n              register: register7,\n              errors: errors7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 33\n            }, this), errors7.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors7.subject.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textarea_field\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"textarea_text\",\n                children: [\"Bericht:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"textarea_text\",\n                  name: \"msgBody\",\n                  rows: \"4\",\n                  cols: \"50\",\n                  placeholder: \"laat hier je bericht\",\n                  ...register2(\"msgBody\", {\n                    required: {\n                      maxLength: \"500\",\n                      message: 'Maximaal 500 karakters'\n                    }\n                  }),\n                  errors: errors2,\n                  children: errors2.msgBody && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: errors2.msgBody.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"versturen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 33\n            }, this), succesSendMail && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"margin-top1\",\n              children: \" Email is verzonden.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 52\n            }, this)]\n          }, 2, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"/I2wJ8NnDXhja5oPyVNt+Rfcyto=\", false, function () {\n  return [useNavigate, useForm, useForm, useForm, useForm, useForm, useForm, useForm, useForm];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["Header","bib","React","useContext","useEffect","useRef","useState","axios","Input","useForm","Button","Link","useNavigate","Subscription","AuthContext","jsxDEV","_jsxDEV","Admin","_s","navigate","token","localStorage","getItem","error","toggleError","loading","toggleLoading","users","setUsers","singleUser","setSingleUser","toDelete","setToDelete","items","setItems","idToDelete","setIdToDelete","subscriptions","setSubscriptions","subscriptionsList","setSubscriptionsList","expirationDate","setExpirationDate","subscriptionStatus","setSubscriptionStatus","typeSubscription","setTypeSubscription","patchThisSubscription","togglePatchThisSubscription","subscriptionIdToPatch","setSubscriptionIdToPatch","accounts","setAccounts","accountsList","setAccountsList","orders","setOrders","ordersList","setOrdersList","patchThisOrder","togglePatchThisOrder","orderIdToPatch","setOrderIdToPatch","register","handleSubmit","handleSubmit1","formState","errors","patchThisUser","togglePatchThisUser","userIdToPatch","setUserIdToPatch","isAuth","user","admin","toggleAdmin","clicks","setClicks","userIdToEmail","setUserIdToEmail","succesSendMail","toggleSuccesSendMail","register2","errors2","handleSubmit2","reset","register3","handleSubmit3","resetForm3","errors3","register4","handleSubmit4","resetForm4","errors4","register5","handleSubmit5","resetForm5","errors5","register6","handleSubmit6","resetForm6","errors6","register7","handleSubmit7","resetForm7","errors7","register8","handleSubmit8","resetForm8","errors8","resetFormFields","controller","AbortController","fetchUsers","response","get","headers","signal","data","e","console","cleanup","abort","deleteUserFunction","username","preventDefault","log","toLowerCase","delete","fetchItems","deleteItemFunction","fetchAccounts","fetchSubscriptions","patchSubscription","patch","patchUser","emailUserFunction","recipient","sendMail","post","status","className","children","authority","to","fileName","_jsxFileName","lineNumber","columnNumber","name","id","type","value","onChange","target","map","list","userInfo","email","comment","itemInfo","onSubmit","patchOrder","labelText","currentTarget","subscriptionId","nameInfo","onClick","item","tags","htmlFor","placeholder","validationRules","required","message","subject","rows","cols","maxLength","msgBody","_c","$RefreshReg$"],"sources":["C:/Users/jftal/WebstormProjects/KLEDING_BIEB/src/pages/admin/Admin.js"],"sourcesContent":["\r\n\r\n\r\nimport Header from '../../components/header/Header';\r\nimport './Admin.css';\r\nimport bib from \"../../assets/Mar_Bib.jpg\";\r\n\r\nimport React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport './Admin.css';\r\nimport axios from \"axios\";\r\nimport Input from \"../../components/input/Input\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport Button from \"../../components/button/Button\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nimport {Subscription} from \"../subscription/Subscription\";\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\n//import pic from \"../../assets/hilado-en-huso.jpg\";\r\n\r\n\r\n// class Admin extends React.Component {\r\n//     render() {\r\n\r\n\r\n\r\n\r\nfunction Admin() {\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem('token');\r\n    const [error, toggleError] = useState(false);\r\n    const [loading, toggleLoading] = useState(false);\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [singleUser, setSingleUser] = useState('');\r\n\r\n\r\n    const [toDelete, setToDelete] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    //  const [deleteThisItem, toggleDeleteThisItem] = useState(false);\r\n    //  const [singleItem, setSingleItem] = useState('');\r\n    //  const [item_id, setItem_id] = useState(0);\r\n    //  const [nameInfo, setNameInfo] = useState(\"\");\r\n\r\n\r\n    const [idToDelete, setIdToDelete] = useState(\"\");\r\n\r\n\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [subscriptionsList, setSubscriptionsList] = useState([]);\r\n\r\n    // const [userInfo, setUserInfo] = useState(\"\");\r\n    \r\n    const [expirationDate, setExpirationDate] = useState(\"\");\r\n    const [subscriptionStatus, setSubscriptionStatus] = useState(\"\");\r\n    const [typeSubscription, setTypeSubscription] = useState(\"\");\r\n    const [patchThisSubscription, togglePatchThisSubscription] = useState(false);\r\n    const [subscriptionIdToPatch, setSubscriptionIdToPatch] = useState(\"\");\r\n\r\n    // const { handleSubmit, formState: { errors4 } } = useForm();\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [accountsList, setAccountsList] = useState('');\r\n\r\n\r\n    const [orders, setOrders] = useState('');\r\n    const [ordersList, setOrdersList] = useState('');\r\n    const [patchThisOrder, togglePatchThisOrder] = useState(false);\r\n    const [orderIdToPatch, setOrderIdToPatch] = useState(\"\")\r\n\r\n    //patch user\r\n    const {register, handleSubmit: handleSubmit1, formState: {errors}} = useForm();\r\n    const [patchThisUser, togglePatchThisUser] = useState(false);\r\n    const [userIdToPatch, setUserIdToPatch] = useState(\"\");\r\n\r\n    const {isAuth, user} = useContext(AuthContext);\r\n    const [admin, toggleAdmin] = useState(false);\r\n\r\n    const [clicks, setClicks]= useState(0);\r\n    //mail\r\n\r\n    const [userIdToEmail, setUserIdToEmail] = useState(\"\");\r\n    const [succesSendMail, toggleSuccesSendMail] = useState(false);\r\n\r\n    const { register: register2, formState: {errors: errors2}, handleSubmit: handleSubmit2, reset} = useForm();\r\n    const { register: register3, handleSubmit: handleSubmit3, reset: resetForm3, formState: { errors: errors3 } } = useForm();\r\n    const { register: register4, handleSubmit: handleSubmit4, reset: resetForm4, formState: { errors: errors4 } } = useForm();\r\n    const { register: register5, handleSubmit: handleSubmit5, reset: resetForm5, formState: { errors: errors5 } } = useForm();\r\n    const { register: register6, handleSubmit: handleSubmit6, reset: resetForm6, formState: { errors: errors6 } } = useForm();\r\n    const { register: register7, handleSubmit: handleSubmit7, reset: resetForm7, formState: { errors: errors7 } } = useForm();\r\n    const { register: register8, handleSubmit: handleSubmit8, reset: resetForm8, formState: { errors: errors8 } } = useForm();\r\n    const resetFormFields = () => {\r\n        setSingleUser(\"\"); // Clear the selected user value\r\n        setToDelete([]); // Clear the selected item value\r\n        setUserIdToPatch(\"\"); // Clear the user id value for user patch\r\n        setUserIdToEmail(\"\"); // Clear the user id value for sending email\r\n        toggleSuccesSendMail(false); // Reset email success state\r\n        togglePatchThisUser(false); // Reset user patch state\r\n        setSubscriptions( []);\r\n        resetForm3();\r\n        resetForm4();\r\n        resetForm5();\r\n        resetForm6();\r\n        resetForm7();\r\n        resetForm8();\r\n    };\r\n\r\n\r\n    // to get all users//////////////////////////////////////////////////////////////////////////////////////\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n\r\n        async function fetchUsers() {\r\n\r\n            // toggleDeleteUser(false);\r\n            togglePatchThisUser(false);\r\n\r\n\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/users', {\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n\r\n\r\n                    signal: controller.signal,\r\n                });\r\n                navigate('/Admin');\r\n                setUsers(response.data);\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n\r\n        void fetchUsers();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        };\r\n    }, []);\r\n\r\n\r\n    // to delete user//////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    async function deleteUserFunction(e, username) {\r\n        e.preventDefault()\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        console.log(username.toLowerCase())\r\n        try {\r\n            const response = await axios.delete(`http://localhost:8083/users/${username.toLowerCase()}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                }\r\n            });\r\n            console.log(response)\r\n            resetFormFields();\r\n            navigate(\"/Account\");\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n/////  to get all items  ////////////////////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n        async function fetchItems() {\r\n            // toggleDeleteThisItem(false);\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/items', {\r\n                    // item_id: item_id,\r\n                    // name_Info: nameInfo,\r\n                    // user_username: user_username,\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                    signal: controller.signal,\r\n\r\n                });\r\n                navigate('/Admin');\r\n                setItems(response.data);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        void fetchItems();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    /////to delete item///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    async function deleteItemFunction(e, idToDelete) {\r\n        e.preventDefault(idToDelete);\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        console.log()\r\n\r\n        try {\r\n\r\n\r\n            const response = await axios.delete(`http://localhost:8083/items/${idToDelete}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n                // signal: controller.signal,\r\n            });\r\n\r\n            // setItems(response.data);\r\n            console.log(response)\r\n            setIdToDelete(response.data);\r\n            resetFormFields();\r\n            navigate(\"/Account\");\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n// /////////////////////////////////////////////////////////////////\r\n//\r\n//     useEffect(() => {\r\n//\r\n//         const controller = new AbortController();\r\n//         async function fetchOrders() {\r\n//             //  togglePatchThisAccount(false);\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:8083/orders', {\r\n//\r\n//\r\n//                     headers: {\r\n//                         \"Content-Type\": \"application/json\",\r\n//                         \"Authorization\": `Bearer ${token}`,\r\n//                     },\r\n//                     signal: controller.signal,\r\n//                 });\r\n//\r\n//                 setOrders(response.data);\r\n//                 navigate('/Admin');\r\n//                 // setSubscriptionsList(response.data);\r\n//             } catch (e) {\r\n//                 console.error(e);\r\n//             }\r\n//         }\r\n//\r\n//         void fetchOrders();\r\n//         return function cleanup() {\r\n//             controller.abort();\r\n//         }\r\n//     }, []);\r\n\r\n\r\n\r\n\r\n\r\n    /////  to get all accounts info ////////////////////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n        async function fetchAccounts() {\r\n            //  togglePatchThisAccount(false);\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/accounts', {\r\n\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                    signal: controller.signal,\r\n                });\r\n\r\n                setAccounts(response.data);\r\n                navigate('/Admin');\r\n                // setSubscriptionsList(response.data);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n\r\n        void fetchAccounts();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n/////  to get all subscriptions info ////////////////////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n\r\n        const controller = new AbortController();\r\n        async function fetchSubscriptions() {\r\n            togglePatchThisSubscription(false);\r\n            try {\r\n                const response = await axios.get('http://localhost:8083/subscriptions', {\r\n\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                    signal: controller.signal,\r\n                });\r\n\r\n                setSubscriptions(response.data);\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n\r\n        void fetchSubscriptions();\r\n        return function cleanup() {\r\n            controller.abort();\r\n        }\r\n    }, []);\r\n\r\n\r\n    /////// Change info bij subscriptions /////////////////////////////////////////\r\n\r\n\r\n    async function patchSubscription(data) {\r\n        // e.preventDefault();\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        try {\r\n\r\n\r\n\r\n\r\n            const response = await axios.patch(`http://localhost:8083/subscriptions/${subscriptionIdToPatch}`,\r\n                data, {\r\n                     expirationDate: expirationDate,\r\n                    subscriptionStatus: subscriptionStatus,\r\n                  typeSubscription: typeSubscription,\r\n\r\n\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                });\r\n            togglePatchThisSubscription(true);\r\n            console.log('Subscription updated:', response.data);\r\n           resetFormFields();\r\n            navigate(\"/Account\");\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n\r\n    /////// Change info bij users /////////////////////////////////////////\r\n    async function patchUser(data) {\r\n        toggleError(false);\r\n        toggleLoading(true);\r\n        try {\r\n            const response = await axios.patch(`http://localhost:8083/users/${userIdToPatch}`,\r\n                data,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                    },\r\n                });\r\n            togglePatchThisUser(true);\r\n            console.log(response);\r\n            resetFormFields();\r\n            navigate(\"/Account\");\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n    // //to send mail//////////////////////////////////////////////////////////////////////////////////\r\n    function emailUserFunction(data) {\r\n        data.recipient = userIdToEmail;\r\n        void sendMail(data);\r\n    }\r\n\r\n\r\n    async function sendMail(data) {\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/sendMail', {\r\n                data\r\n            }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                }\r\n            });\r\n            if (response.status === 200) {\r\n                toggleSuccesSendMail(true);\r\n            }\r\n            console.log(\"Response adminpage\")\r\n            console.log(response.status);\r\n            resetFormFields();\r\n            navigate(\"/Admin\");\r\n        } catch (e) {\r\n            console.error(e);\r\n            toggleError(true);\r\n        }\r\n        toggleLoading(true);\r\n    }\r\n\r\n\r\n// return//////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n\r\n\r\n        <main className=\"page\">\r\n            {(isAuth && user.authority === \"ROLE_USER\" && !admin) &&\r\n                <article className=\"page\" > <h1>Sorry, go back to your<Link to=\"/Account\"> account </Link> 😵</h1>\r\n                    <h2>Only for Administrators </h2>\r\n\r\n                    {/*<Header icon={pic}/>*/}\r\n                </article>}\r\n            {(isAuth && user.authority === \"ROLE_ADMIN\" && !admin) &&\r\n\r\n                <article className=\"page2\">\r\n\r\n\r\n\r\n                    {/*//////////             accounts lijst/////////////////////////////////////////////////////////////////////////*/}\r\n\r\n                    <fieldset>\r\n                        <legend><h2 className=\"margin-top2\">Lijst van accounts en opmerkingen</h2></legend>\r\n                        <select\r\n                            name=\"accounts\"\r\n                            id=\"userInfo\"\r\n                            type=\"list\"\r\n                            value={accountsList}\r\n                            onChange={(e) => setAccountsList(e.target.value)}\r\n                        >\r\n                            <option>selecteer een username</option>\r\n                            {accounts.map((list) => {\r\n                                return <option key={list.id}\r\n                                               value={list.userInfo}>\r\n                                    {list.userInfo} - {list.email} -\r\n                                     {list.comment}\r\n                                </option>\r\n                            })}\r\n\r\n                        </select>\r\n                    </fieldset>\r\n\r\n\r\n\r\n\r\n                    {/*//////////  Orders lijst/////////////////////////////////////////////////////////////////////////*/}\r\n\r\n                    <fieldset>\r\n                        <legend><h2 className=\"margin-top2\">Lijst van orders </h2></legend>\r\n                        <select\r\n                            name=\"orders\"\r\n                            id=\"itemInfo\"\r\n                            type=\"list\"\r\n                            value={ordersList}\r\n                            onChange={(e) => setOrdersList(e.target.value)}\r\n                        >\r\n                            <option>selecteer een order</option>\r\n\r\n                            {orders.map((list) => {\r\n                                return <option key={list.id}\r\n                                               value={list.itemInfo}>\r\n                                    {list.itemInfo}/{list.id}\r\n                                </option>\r\n                            })}\r\n\r\n                        </select>\r\n\r\n                        <form\r\n                            key={5}\r\n                            className=\"margin-top5\"\r\n                            onSubmit={handleSubmit5(patchOrder)}\r\n                        >\r\n                            <Input\r\n                                labelText=\"itemInfo\"\r\n                                type=\"text\"\r\n                                name=\"itemInfo\"\r\n                                className=\"input_text\"\r\n                                register={register5}\r\n                                errors={errors5}\r\n\r\n                            />\r\n\r\n                            <Input\r\n                                labelText=\"dateInfo\"\r\n                                type=\"date\"\r\n                                name=\"dateInfo\"\r\n                                className=\"input_text\"\r\n                                register={register8}\r\n                                errors={errors8}\r\n\r\n                            />\r\n\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                className=\"button-ellips\"\r\n                            >\r\n                                Aanpassen\r\n                            </Button>\r\n\r\n\r\n                        </form>\r\n\r\n\r\n                    </fieldset>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {/*change subscription ///////////////////////////////////////////////////////////////////////////////////////*/}\r\n                    <section>\r\n\r\n                        <fieldset>\r\n                            <legend><h2 className=\"margin-top2\">Lijst en aanpassen van subscriptions</h2></legend>\r\n\r\n                            <select\r\n                                className=\"subscription-change\"\r\n                                onChange={e => setSubscriptionIdToPatch(e.currentTarget.value)}\r\n                            >\r\n                                <option>selecteer subscription</option>\r\n                                {subscriptions.map(list => (\r\n                                    <option\r\n                                        key={list.id}\r\n                                        value={list.id}\r\n                                    >{list.typeSubscription}- {list.subscriptionStatus}-\r\n                                        {list.expirationDate}-id nr:{list.subscriptionId}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n\r\n                            <form\r\n                                key={3}\r\n                                className=\"margin-top3\"\r\n                                onSubmit={handleSubmit3(patchSubscription)}\r\n                            >\r\n                                <Input\r\n                                    labelText=\"typeSubscription\"\r\n                                    type=\"text\"\r\n                                    name=\"typeSubscription\"\r\n                                    className=\"input_text\"\r\n                                    register={register5}\r\n                                    errors={errors5}\r\n\r\n                                />\r\n\r\n                                <Input\r\n                                    labelText=\"expirationDate\"\r\n                                    type=\"date\"\r\n                                    name=\"expirationDate\"\r\n                                    className=\"input_text\"\r\n                                    register={register6}\r\n                                    errors={errors6}\r\n                                    />\r\n\r\n                                <Input\r\n                                    labelText=\"subscriptionStatus\"\r\n                                    type=\"text\"\r\n                                    name=\"subscriptionStatus\"\r\n                                    className=\"input_text\"\r\n                                    register={register6}\r\n                                    errors={errors6}\r\n                                />\r\n\r\n\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"button-ellips\"\r\n                                >\r\n                                    Aanpassen\r\n                                </Button>\r\n\r\n                                {patchThisSubscription &&\r\n                                    <h4 className=\"margin-top1\">De subscription is gewijzigd.</h4>}\r\n\r\n                            </form>\r\n\r\n\r\n                        </fieldset>\r\n                    </section>\r\n\r\n\r\n\r\n\r\n                    {/*change user///////////////////////////////////////////////////////////////////////////////////////*/}\r\n                    <section>\r\n                        <fieldset>\r\n                            <legend> <h2 className=\"margin-top2\">Aanpassen van user</h2></legend>\r\n\r\n                            <select\r\n                                className=\"user-change\"\r\n                                onChange={e => setUserIdToPatch(e.currentTarget.value)}\r\n                            >\r\n                                <option>selecteer een username</option>\r\n                                {users.map(user => (\r\n                                    <option\r\n                                        key={user.username}\r\n                                        value={user.username}\r\n                                    >\r\n                                        {user.username}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n\r\n                            <form\r\n                                key={1}\r\n                                className=\"margin-top2\"\r\n                                onSubmit={handleSubmit1(patchUser)}\r\n                            >\r\n                                <Input\r\n                                    labelText=\"wachtwoord\"\r\n                                    type=\"text\"\r\n                                    name=\"password\"\r\n                                    className=\"input_text\"\r\n                                    register={register3}\r\n                                    errors={errors3}\r\n                                />\r\n\r\n                                <Input\r\n                                    labelText=\"username\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    className=\"input_text\"\r\n                                    register={register4}\r\n                                    errors={errors4}\r\n                                />\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"button-ellips\"\r\n                                >\r\n                                    versturen\r\n                                </Button>\r\n                                {patchThisUser &&\r\n                                    <h4 className=\"margin-top1\">De user is gewijzigd.</h4>}\r\n\r\n                            </form>\r\n                        </fieldset>\r\n                    </section>\r\n\r\n                    {/*/////  lijst USERS n delete///////////////////////////////////////////////////*/}\r\n\r\n                    <fieldset>\r\n                        <legend> <h2 className=\"margin-top2\">Lijst van users </h2></legend>\r\n                        <select\r\n                            name=\"users\"\r\n                            id=\"username\"\r\n                            type=\"list\"\r\n                            value={singleUser}\r\n                            onChange={(e) => setSingleUser(e.target.value)}\r\n                        >\r\n                            <option>selecteer een username</option>\r\n                            {users.map((user) => {\r\n                                return <option key={user.id}\r\n                                               value={user.username}>\r\n                                    {user.email} - {user.nameInfo} -\r\n                                    {user.username}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                        <button id=\"button-box\" className=\"button\" type=\"submit\"\r\n\r\n                                onClick={(e) => deleteUserFunction(e, singleUser)}>\r\n                            Verwijderen van User\r\n                        </button>\r\n\r\n                    </fieldset>\r\n\r\n\r\n\r\n\r\n\r\n                    {/*Items lijst/////////////////////////////////////////////////////////////////////////.*/}\r\n\r\n\r\n                    <fieldset>\r\n                        <legend> <h2 className=\"margin-top2\">Lijst van items </h2></legend>\r\n\r\n\r\n                        <select\r\n                            name=\"items\"\r\n                            id=\"tags\"\r\n                            type=\"list\"\r\n                            value={toDelete}\r\n                            onChange={(e) => setToDelete(e.target.value)}\r\n                        >\r\n                            <option>selecteer een item</option>\r\n                            {items.map((item) => {\r\n                                return <option key={item.id}\r\n                                               value={item.id}> {item.tags}-{item.nameInfo}--item id/{item.id}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                        <button id=\"button-box\" className=\"button\" type=\"submit\"\r\n\r\n                                onClick={(e) => deleteItemFunction(e, toDelete)}>\r\n                            Verwijderen van Item\r\n                        </button>\r\n\r\n                    </fieldset>\r\n\r\n                    {/*mail/////////////////////////////////////////////////////////////////////////.*/}\r\n\r\n                    <section>\r\n                        <fieldset>\r\n                            <legend>  <h2 className=\"margin-top2\">Bericht versturen</h2></legend>\r\n\r\n                            <form\r\n                                key={2}\r\n                                onSubmit={handleSubmit2(emailUserFunction)}\r\n                            >\r\n                                <div className=\"margin-bottom2\">\r\n\r\n                                    <label htmlFor=\"recipient\">\r\n                                        Email naar:\r\n                                        <select\r\n                                            className=\"text_select\"\r\n                                            onChange={e => setUserIdToEmail(e.target.value)}\r\n                                        >\r\n                                            <option>selecteer een emailadres</option>\r\n                                            {users.map((user) => {\r\n                                                return (\r\n                                                    <option\r\n                                                        key={user.username}\r\n                                                    >\r\n                                                        {user.email}\r\n                                                    </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <Input\r\n                                    id=\"subject\"\r\n                                    labelText=\"Onderwerp:\"\r\n                                    type=\"text\"\r\n                                    name=\"subject\"\r\n                                    className=\"input_text\"\r\n                                    placeholder=\"onderwerp\"\r\n                                    validationRules={{\r\n                                        required: {\r\n                                            value: true,\r\n                                            message: 'Dit veld is verplicht',\r\n                                        }\r\n                                    }}\r\n                                    register={register7}\r\n                                    errors={errors7}\r\n                                />\r\n                                {errors7.subject && <p>{errors7.subject.message}</p>}\r\n\r\n\r\n                                <div className=\"textarea_field\">\r\n                                    <label htmlFor=\"textarea_text\">\r\n                                        Bericht:\r\n                                        <textarea\r\n                                            className=\"textarea_text\"\r\n                                            name=\"msgBody\"\r\n                                            rows=\"4\"\r\n                                            cols=\"50\"\r\n                                            placeholder=\"laat hier je bericht\"\r\n                                            {...register2(\"msgBody\", {\r\n                                                required: {\r\n                                                    maxLength: \"500\",\r\n                                                    message: 'Maximaal 500 karakters'\r\n                                                }\r\n                                            })}\r\n                                            errors={errors2}\r\n                                        >\r\n                        {errors2.msgBody && <p>{errors2.msgBody.message}</p>}\r\n                            </textarea>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                >\r\n                                    versturen\r\n                                </Button>\r\n\r\n                                {succesSendMail && <h4 className=\"margin-top1\"> Email is verzonden.</h4>}\r\n                            </form>\r\n                        </fieldset>\r\n                    </section>\r\n\r\n                </article>}\r\n        </main>\r\n    );\r\n}\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}