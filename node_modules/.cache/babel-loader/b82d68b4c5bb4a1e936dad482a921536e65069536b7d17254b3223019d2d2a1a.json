{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jftal\\\\WebstormProjects\\\\KLEDING_BIEB\\\\src\\\\pages\\\\subscription\\\\Subscription.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n//\nimport axios from \"axios\";\n// import {AuthContext} from \"../../context/AuthContext\";\nimport pic from '../../../../KLEDING_BIEB/src/assets/cotton.jpg';\nimport Header from \"../../components/header/Header\";\nimport { useForm } from \"react-hook-form\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\n////////////////////////////////////////\n\n//\n// import React, {useContext, useEffect, useState} from \"react\";\n//\n// import {AuthContext} from \"../../context/AuthContext\";\n// import axios from \"axios\";\n// import Header from \"../../components/header/Header\";\n// import {useForm} from \"react-hook-form\";\n// import jwtDecode from \"jwt-decode\";\n// import Button from \"../../components/button/Button\";\n//\n//\n//\n// function Subscription() {\n//\n//\n//     const jwt = localStorage.getItem(\"token\")\n//     const decodedToken = jwtDecode(jwt);\n//     decodedToken.sub = undefined;\n//\n//     const {register, handleSubmit, formState: { errors }} = useForm();\n//     const [clicks, setClicks]= useState(0);\n//     const [onsubmit, toggleOnSubmit] = useState(true)\n//\n//     const {\n//         subscription: {username, password, email},\n//         fetchUserData,loading  } = useContext(AuthContext);\n//     // Controleer of de account-waarde correct is ingesteld voordat je deze gebruikt\n//\n//\n//\n//     useEffect(() => {\n//         fetchUserData(jwt, decodedToken.sub)\n//     }, [decodedToken.sub, jwt])\n//     if (!username || !password || !email) {\n//         return <div>Error: Gebruikersgegevens niet beschikbaar</div>; // Toon een foutmelding\n//     }\n//\n//\n//\n//\n//     const storedToken = localStorage.getItem( 'token' )\n//\n//     const onSubmit = async (data) => {\n//         try {\n//             await axios.put(`http://localhost:8083/accounts/${username}`, data, {\n//                 headers: {Authorization: `Bearer ${storedToken}`}})\n//\n//\n//\n//         } catch (error) {\n//             console.error(error);\n//             toggleOnSubmit(false)\n//         }\n//     }\n//\n//     return (\n//         <>\n//             <main>\n//\n//                 <Header\n//                     title=\"Welcome on your profile page.\"></Header>\n//\n//                 <div className=\"outer-container\">\n//                    {/*//   id=\"outer-container__profile\">*/}\n//                    {/*// // <div className=\"inner-container\" id=\"inner-container__profile\">*/}\n//\n//                         <section className=\"left-column\">\n//                             <h2 className=\"column-title\">Your profile settings: </h2>\n//                             <span>\n//                                 <p className=\"profile-settings\"><strong>username:</strong> {username}</p>\n//                                 <p className=\"profile-settings\"><strong>password:</strong> {password}</p>\n//                                 <p className=\"profile-settings\"><strong>Email:</strong> {email}</p>\n//                             </span>\n//                         </section>\n//\n//\n//\n//                         <section className=\"column\">\n//\n//                             <form onSubmit={handleSubmit(onSubmit)} >\n//\n//                                 <label htmlFor=\"username\">\n//                                     <strong className=\"inputtTitle\">Username:</strong>\n//                                     <input\n//                                         type=\"text\"\n//                                         className=\"profile-field\"\n//                                         id=\"username\"\n//                                         placeholder=\"username\"\n//\n//                                         {...register(\"username\", {\n//                                             required: {\n//                                                 value: true\n//                                             }\n//                                         })}\n//                                     />\n//                                     {errors.username && <p className=\"error-mssg\">username is required</p>}\n//                                 </label>\n//\n//                                 <label htmlFor=\"password\">\n//                                     <strong className=\"inputTitle\">Password:</strong>\n//                                     <input\n//                                         type=\"text\"\n//                                         className=\"profile-field\"\n//                                         id=\"password\"\n//                                         placeholder=\"password\"\n//\n//                                         {...register(\"password\", {\n//                                             required: {\n//                                                 value: true\n//                                             }\n//                                         })}\n//                                     />\n//                                     {errors.password && <p className=\"error-mssg\">password is required</p>}\n//                                 </label>\n//\n//\n//\n//                                 <label htmlFor=\"email-field\">\n//                                     <strong className=\"input-field-title\">Email:</strong>:\n//                                     <input\n//                                         type=\"text\"\n//                                         className=\"profile-field\"\n//                                         id=\"email\"\n//                                         placeholder=\"email\"\n//                                         {...register(\"email\", {\n//                                             required: \"Email is required\",\n//\n//                                             pattern: {\n//                                                 value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n//                                                 message: \"Invalid email address\"\n//                                             }\n//                                         })}\n//                                     />\n//                                     {errors.email &&\n//                                         <p className=\"error-mssg\">{errors.email.message}</p>\n//                                     }\n//                                 </label>\n//\n//                                 <div className=\"button\">\n//                                     {<Button className=\"button\"\n//                                              children=\"Update your profile\"\n//                                              type=\"submit\"\n//                                     />}\n//                                 </div>\n//\n//                                 {!onsubmit &&\n//                                     <h2 className=\"warning-msg\">Something went wrong contact your Admin</h2>}\n//\n//                             </form>\n//                         </section>\n//\n//                 </div>\n//\n//\n//             </main>\n//         </>\n//     );\n// }\n//\n//\n// export default Subscription;\n//\n\n//\n//\n//\n// function Subscription() {\n//     const {login} = useContext(AuthContext);\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [username, setUsername] = useState('');\n//     const navigate = useNavigate();\n//     //const {handleSubmit, formState: {errors}, subscription} = useForm();\n//     const {toggleSuccessRegister} = useState(true);\n//     const token = localStorage.getItem('token');\n//     // function handleSubmit(e) {\n//     //     e.preventDefault();\n//     //     console.log({\n//     //         email: email,\n//     //         password: password,\n//     //          username: username,\n//     //     })\n//\n//\n//     async function registerUser(e) {\n//         e.preventDefault()\n//         console.log(email, password, username)\n//         try {\n//             const response = await axios.post('http://localhost:8083/users', {\n//                 email: email,\n//                 password: password,\n//                 username: username,\n//             })\n//             if (response.status !== 201) {\n//                 toggleSuccessRegister(false);\n//             }\n//             console.log(response)\n//            // login(email);\n//             navigate('/Account');\n//\n//\n//         }  catch (e) {\n//                 console.error(e)\n//             }\n//\n//         }\n//\n//\n//         return (\n//\n//\n//             <p className=\"page2\">\n//\n//\n//                 <Header icon={pic}/>\n//\n//\n//                 <ul className=\"form-xtra\">\n//\n//\n//\n//                     <form onSubmit={registerUser}>\n//\n//                         <fieldset>\n//                        <legend> <h1>Registreren</h1></legend>\n//\n//                             <label htmlFor=\"details-email\">\n//                             E-mailadres :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"email\"\n//                                 value={email}\n//                                 onChange={(e) => setEmail(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <label htmlFor=\"details-wachtwoord\">\n//                             Wachtwoord :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"password\"\n//                                 value={password}\n//                                 onChange={(e) => setPassword(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <label htmlFor=\"details-gebruikersnaam\">\n//                             Gebruikersnaam :\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"username\"\n//                                 value={username}\n//                                 onChange={(e) => setUsername(e.target.value)}\n//                             />\n//                         </label>\n//\n//                         <button type=\"submit\">Registreren</button>\n//\n//                     </fieldset>\n//                     </form>\n//\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\n//\n//\n//                 </ul>\n//\n//             </p>\n//        );\n//\n// }\n//\n// export default Subscription;\n//\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subscription() {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n  const {\n    toggleSuccessRegister\n  } = useState(true);\n  const token = localStorage.getItem('token');\n  //  const { formState: { errors }} = useForm();\n  //const [errors, toggleErrors] = useState(false);\n  const [onsubmit, toggleOnSubmit] = useState(true);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  //  async function registerUser(e) {\n\n  const onSubmit = async () => {\n    // e.preventDefault()\n    console.log(email, password, username);\n    try {\n      const response = await axios.post('http://localhost:8083/users', {\n        email: email,\n        password: password,\n        username: username\n      });\n      if (response.status !== 201) {\n        toggleSuccessRegister(false);\n      }\n      console.log(response);\n      navigate('/Login');\n    } catch (e) {\n      console.error(e);\n      toggleOnSubmit(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page2\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      icon: pic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-xtra\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Registreren\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"details-email\",\n            children: [\"E-mailadres :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"email\",\n              ...register(\"email\", {\n                required: \"Email is required\",\n                pattern: {\n                  value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                  message: \"Invalid email address\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error_mssg\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"details-wachtwoord\",\n            children: [\"Wachtwoord :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"password\",\n              ...register(\"password\", {\n                required: \"Password is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error_mssg\",\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"details-gebruikersnaam\",\n            children: [\"Gebruikersnaam :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"username\",\n              ...register(\"username\", {\n                required: \"Username is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error_mssg\",\n              children: errors.username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Registreren\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Heb je al een account? Je kunt je \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Login\",\n          children: \"hier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 58\n        }, this), \" inloggen.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 13\n  }, this);\n}\n_s(Subscription, \"RrLRSU3hkmjZ2VQ0k/C4+sR1IFo=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Subscription;\nexport default Subscription;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////\nvar _c;\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"names":["React","useContext","useState","Link","useNavigate","axios","pic","Header","useForm","AuthContext","jsxDEV","_jsxDEV","Subscription","_s","login","email","setEmail","password","setPassword","username","setUsername","navigate","toggleSuccessRegister","token","localStorage","getItem","onsubmit","toggleOnSubmit","register","handleSubmit","formState","errors","onSubmit","console","log","response","post","status","e","error","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","placeholder","required","pattern","message","to","_c","$RefreshReg$"],"sources":["C:/Users/jftal/WebstormProjects/KLEDING_BIEB/src/pages/subscription/Subscription.js"],"sourcesContent":["\r\n import React, {useContext, useState} from \"react\";\r\n import {Link, useNavigate} from \"react-router-dom\";\r\n//\r\n import axios from \"axios\";\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n import pic from '../../../../KLEDING_BIEB/src/assets/cotton.jpg';\r\n import Header from \"../../components/header/Header\";\r\n import {useForm} from \"react-hook-form\";\r\n import {AuthContext} from \"../../context/AuthContext\";\r\n\r\n////////////////////////////////////////\r\n\r\n//\r\n// import React, {useContext, useEffect, useState} from \"react\";\r\n//\r\n// import {AuthContext} from \"../../context/AuthContext\";\r\n// import axios from \"axios\";\r\n// import Header from \"../../components/header/Header\";\r\n// import {useForm} from \"react-hook-form\";\r\n// import jwtDecode from \"jwt-decode\";\r\n// import Button from \"../../components/button/Button\";\r\n//\r\n//\r\n//\r\n// function Subscription() {\r\n//\r\n//\r\n//     const jwt = localStorage.getItem(\"token\")\r\n//     const decodedToken = jwtDecode(jwt);\r\n//     decodedToken.sub = undefined;\r\n//\r\n//     const {register, handleSubmit, formState: { errors }} = useForm();\r\n//     const [clicks, setClicks]= useState(0);\r\n//     const [onsubmit, toggleOnSubmit] = useState(true)\r\n//\r\n//     const {\r\n//         subscription: {username, password, email},\r\n//         fetchUserData,loading  } = useContext(AuthContext);\r\n//     // Controleer of de account-waarde correct is ingesteld voordat je deze gebruikt\r\n//\r\n//\r\n//\r\n//     useEffect(() => {\r\n//         fetchUserData(jwt, decodedToken.sub)\r\n//     }, [decodedToken.sub, jwt])\r\n//     if (!username || !password || !email) {\r\n//         return <div>Error: Gebruikersgegevens niet beschikbaar</div>; // Toon een foutmelding\r\n//     }\r\n//\r\n//\r\n//\r\n//\r\n//     const storedToken = localStorage.getItem( 'token' )\r\n//\r\n//     const onSubmit = async (data) => {\r\n//         try {\r\n//             await axios.put(`http://localhost:8083/accounts/${username}`, data, {\r\n//                 headers: {Authorization: `Bearer ${storedToken}`}})\r\n//\r\n//\r\n//\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             toggleOnSubmit(false)\r\n//         }\r\n//     }\r\n//\r\n//     return (\r\n//         <>\r\n//             <main>\r\n//\r\n//                 <Header\r\n//                     title=\"Welcome on your profile page.\"></Header>\r\n//\r\n//                 <div className=\"outer-container\">\r\n//                    {/*//   id=\"outer-container__profile\">*/}\r\n//                    {/*// // <div className=\"inner-container\" id=\"inner-container__profile\">*/}\r\n//\r\n//                         <section className=\"left-column\">\r\n//                             <h2 className=\"column-title\">Your profile settings: </h2>\r\n//                             <span>\r\n//                                 <p className=\"profile-settings\"><strong>username:</strong> {username}</p>\r\n//                                 <p className=\"profile-settings\"><strong>password:</strong> {password}</p>\r\n//                                 <p className=\"profile-settings\"><strong>Email:</strong> {email}</p>\r\n//                             </span>\r\n//                         </section>\r\n//\r\n//\r\n//\r\n//                         <section className=\"column\">\r\n//\r\n//                             <form onSubmit={handleSubmit(onSubmit)} >\r\n//\r\n//                                 <label htmlFor=\"username\">\r\n//                                     <strong className=\"inputtTitle\">Username:</strong>\r\n//                                     <input\r\n//                                         type=\"text\"\r\n//                                         className=\"profile-field\"\r\n//                                         id=\"username\"\r\n//                                         placeholder=\"username\"\r\n//\r\n//                                         {...register(\"username\", {\r\n//                                             required: {\r\n//                                                 value: true\r\n//                                             }\r\n//                                         })}\r\n//                                     />\r\n//                                     {errors.username && <p className=\"error-mssg\">username is required</p>}\r\n//                                 </label>\r\n//\r\n//                                 <label htmlFor=\"password\">\r\n//                                     <strong className=\"inputTitle\">Password:</strong>\r\n//                                     <input\r\n//                                         type=\"text\"\r\n//                                         className=\"profile-field\"\r\n//                                         id=\"password\"\r\n//                                         placeholder=\"password\"\r\n//\r\n//                                         {...register(\"password\", {\r\n//                                             required: {\r\n//                                                 value: true\r\n//                                             }\r\n//                                         })}\r\n//                                     />\r\n//                                     {errors.password && <p className=\"error-mssg\">password is required</p>}\r\n//                                 </label>\r\n//\r\n//\r\n//\r\n//                                 <label htmlFor=\"email-field\">\r\n//                                     <strong className=\"input-field-title\">Email:</strong>:\r\n//                                     <input\r\n//                                         type=\"text\"\r\n//                                         className=\"profile-field\"\r\n//                                         id=\"email\"\r\n//                                         placeholder=\"email\"\r\n//                                         {...register(\"email\", {\r\n//                                             required: \"Email is required\",\r\n//\r\n//                                             pattern: {\r\n//                                                 value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n//                                                 message: \"Invalid email address\"\r\n//                                             }\r\n//                                         })}\r\n//                                     />\r\n//                                     {errors.email &&\r\n//                                         <p className=\"error-mssg\">{errors.email.message}</p>\r\n//                                     }\r\n//                                 </label>\r\n//\r\n//                                 <div className=\"button\">\r\n//                                     {<Button className=\"button\"\r\n//                                              children=\"Update your profile\"\r\n//                                              type=\"submit\"\r\n//                                     />}\r\n//                                 </div>\r\n//\r\n//                                 {!onsubmit &&\r\n//                                     <h2 className=\"warning-msg\">Something went wrong contact your Admin</h2>}\r\n//\r\n//                             </form>\r\n//                         </section>\r\n//\r\n//                 </div>\r\n//\r\n//\r\n//             </main>\r\n//         </>\r\n//     );\r\n// }\r\n//\r\n//\r\n// export default Subscription;\r\n//\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n//\r\n// function Subscription() {\r\n//     const {login} = useContext(AuthContext);\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [username, setUsername] = useState('');\r\n//     const navigate = useNavigate();\r\n//     //const {handleSubmit, formState: {errors}, subscription} = useForm();\r\n//     const {toggleSuccessRegister} = useState(true);\r\n//     const token = localStorage.getItem('token');\r\n//     // function handleSubmit(e) {\r\n//     //     e.preventDefault();\r\n//     //     console.log({\r\n//     //         email: email,\r\n//     //         password: password,\r\n//     //          username: username,\r\n//     //     })\r\n//\r\n//\r\n//     async function registerUser(e) {\r\n//         e.preventDefault()\r\n//         console.log(email, password, username)\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8083/users', {\r\n//                 email: email,\r\n//                 password: password,\r\n//                 username: username,\r\n//             })\r\n//             if (response.status !== 201) {\r\n//                 toggleSuccessRegister(false);\r\n//             }\r\n//             console.log(response)\r\n//            // login(email);\r\n//             navigate('/Account');\r\n//\r\n//\r\n//         }  catch (e) {\r\n//                 console.error(e)\r\n//             }\r\n//\r\n//         }\r\n//\r\n//\r\n//         return (\r\n//\r\n//\r\n//             <p className=\"page2\">\r\n//\r\n//\r\n//                 <Header icon={pic}/>\r\n//\r\n//\r\n//                 <ul className=\"form-xtra\">\r\n//\r\n//\r\n//\r\n//                     <form onSubmit={registerUser}>\r\n//\r\n//                         <fieldset>\r\n//                        <legend> <h1>Registreren</h1></legend>\r\n//\r\n//                             <label htmlFor=\"details-email\">\r\n//                             E-mailadres :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"email\"\r\n//                                 value={email}\r\n//                                 onChange={(e) => setEmail(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <label htmlFor=\"details-wachtwoord\">\r\n//                             Wachtwoord :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"password\"\r\n//                                 value={password}\r\n//                                 onChange={(e) => setPassword(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <label htmlFor=\"details-gebruikersnaam\">\r\n//                             Gebruikersnaam :\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"username\"\r\n//                                 value={username}\r\n//                                 onChange={(e) => setUsername(e.target.value)}\r\n//                             />\r\n//                         </label>\r\n//\r\n//                         <button type=\"submit\">Registreren</button>\r\n//\r\n//                     </fieldset>\r\n//                     </form>\r\n//\r\n//                     <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\r\n//\r\n//\r\n//                 </ul>\r\n//\r\n//             </p>\r\n//        );\r\n//\r\n// }\r\n//\r\n// export default Subscription;\r\n//\r\n//\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Subscription() {\r\n   const {login} = useContext(AuthContext);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n   const navigate = useNavigate();\r\n    const {toggleSuccessRegister} = useState(true);\r\n    const token = localStorage.getItem('token');\r\n  //  const { formState: { errors }} = useForm();\r\n    //const [errors, toggleErrors] = useState(false);\r\n    const [onsubmit, toggleOnSubmit] = useState(true);\r\n    const {register, handleSubmit, formState: { errors }} = useForm();\r\n  //  async function registerUser(e) {\r\n\r\n\r\n\r\n const onSubmit = async ( ) => {\r\n       // e.preventDefault()\r\n        console.log(email, password, username)\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/users', {\r\n                email: email,\r\n                password: password,\r\n                username: username,\r\n            })\r\n            if (response.status !== 201) {\r\n                toggleSuccessRegister(false);\r\n            }\r\n            console.log(response)\r\n            navigate('/Login');\r\n        } catch (e) {\r\n            console.error(e)\r\n            toggleOnSubmit(false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"page2\">\r\n                <Header icon={pic}/>\r\n\r\n\r\n                <section className=\"form-xtra\">\r\n\r\n                    {/*<form onSubmit={registerUser}>*/}\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                        <fieldset>\r\n                            <legend> <h1>Registreren</h1></legend>\r\n\r\n                        <label htmlFor=\"details-email\">\r\n                            E-mailadres :\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                placeholder=\"email\"\r\n                                {...register(\"email\", {\r\n                                    required: \"Email is required\",\r\n                                    pattern: {\r\n                                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                        message: \"Invalid email address\"\r\n                                    }\r\n                                })}\r\n                            />\r\n                            {errors.email && (\r\n                                <p className=\"error_mssg\">{errors.email.message}</p>\r\n                            )}\r\n                        </label>\r\n\r\n\r\n\r\n\r\n                        <label htmlFor=\"details-wachtwoord\">\r\n                            Wachtwoord :\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                placeholder=\"password\"\r\n                                {...register(\"password\", {\r\n                                    required: \"Password is required\"\r\n                                })}\r\n\r\n\r\n\r\n                            />\r\n\r\n                            {errors.password && (\r\n                                <p className=\"error_mssg\">{errors.password.message}</p>\r\n                                )}\r\n                        </label>\r\n\r\n\r\n\r\n                        <label htmlFor=\"details-gebruikersnaam\">\r\n                            Gebruikersnaam :\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                placeholder=\"username\"\r\n                                {...register(\"username\", {\r\n                                    required: \"Username is required\"\r\n                                })}\r\n                            />\r\n\r\n                            {errors.username && (\r\n                                <p className=\"error_mssg\">{errors.username.message}</p>\r\n                            )}\r\n                        </label>\r\n\r\n\r\n                            {/*{errors && <p className=\"error-msg\">Registratie mislukt !!*/}\r\n                            {/*    Alle velden invullen</p>}*/}\r\n\r\n                        <button type=\"submit\">Registreren</button>\r\n                        </fieldset>\r\n                    </form>\r\n\r\n                    <p>Heb je al een account? Je kunt je <Link to=\"/Login\">hier</Link> inloggen.</p>\r\n\r\n\r\n                </section>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Subscription;\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}